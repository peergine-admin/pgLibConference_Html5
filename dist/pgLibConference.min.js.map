{"version":3,"sources":["pgLibConference.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","this","_SelfSync","sData","sObjPeer","m_Node","omlGetContent","m_sObjSvr","_TimerStart","_NodeRelogin","_SelfCall","iHandle","OutString","sCmd","sParam","iInd","indexOf","substring","sPeer","_ObjPeerParsePeer","EventProc","ObjectExtReply","_SelfMessage","_KeepRecv","_OnPeerSync","sObj","sAct","m_bReportPeerInfo","m_Group","bEmpty","bChairman","_KeepAdd","EVENT_PEER_SYNC","_OnPeerError","sMeth","sError","_PeerOffline","EVENT_PEER_OFFLINE","./pgLibConferenceConst","./pgLibError","./pgLibNode","2","VideoPeer","pNode","Node","videoHeartbeatStamp","videoHeartbeatLost","smallVideoDivView","smallVideoWndEle","smallVideoRequestStamp","smallOnVideoJoinStamp","smallVideoRequestHandle","smallVideoMode","VIDEO_PEER_MODE_Leave","largeVideoDivView","largeVideoWndEle","largeVideoRequestStamp","largeOnVideoJoinStamp","largeVideoRequestHandle","largeVideoMode","prototype","SetObjPeer","getObjPeer","updataHeartBeatStamp","iStamp","checkHeartBeatLost","smallVideoGetWndEle","sDivView","WndCreate","largeVideoGetWndEle","smallVideoJoin","VIDEO_PEER_MODE_Request","smallVideoJoinCheck","smallOnVideoJoin","VIDEO_PEER_MODE_Response","smallOnVideoJoinCheck","smallVideoJoined","self","VIDEO_PEER_MODE_Join","smallVideoLeave","WndDestroy","largeVideoJoin","largeOnVideoJoin","largeVideoJoined","largeVideoLeave","Release","3","Peer","VideoPeerList","Peers","Search","Object","Ind","Add","ret","oPeer","push","DeleteAt","index","Delete","splice","Clean","Traversing","callback","args","./VideoPeer","4","default","ID_PREFIX","LIB_VER","PG_LANSCAN","bApiLanScan","sLanScanRes","sLanAddr","bPeerCheckTimer","pgLibConference","OnEventListener","bInitialized","bLogined","bEventEnable","m_Self","PG_SELF","m_InitGroup","PG_GROUP","m_Status","PG_STATUS","m_Stamp","PG_STAMP","m_LanScan","mEventProcListener","m_sSvrAddr","m_sRelayAddr","m_listVideoPeer","PreviewStart","sDivPrew","PG_ERR_Normal","PreviewStop","VideoStart","iFlag","VideoStop","VideoOpen","_VideoOpen","VideoOpenL","VideoClose","bServiceStart","bApiVideoStart","_ObjPeerBuild","_VideoPeerSearch","_VideoClose","sStr","OnOutString","ParseInt","sInt","iDef","iRet","Number","OnEvent","_OnTimeout","sExec","_ChairmanAdd","_ChairPeerCheckTimeout","IsDevice","_OnExtRequest","uMeth","uHandle","ObjectGetClass","_OnReply","iErr","alert","ConfigControl","m_sConfig_Control","ConfigNode","mNodeCfg","m_sConfig_Node","Type","Option","MaxPeer","MaxGroup","MaxObject","MaxMCast","MaxHandle","SKTBufSize0","SKTBufSize1","SKTBufSize2","SKTBufSize3","P2PTryTime","GetNode","GetSelfPeer","sObjSelf","Initialize1","sUser","sPass","sSvrAddr","sRelayAddr","sVideoParam","Initialize","sName","sChair","Init","sObjChair","sObjG","sObjD","sObjV","sObjLV","sObjA","m_sInitSvrName","m_sInitSvrAddr","m_listSyncPeer","_NodeStart","restore","_ServiceStart","_NodeStop","PeerAdd","sClass","ObjectDelete","ObjectAdd","PeerDelete","./ConferencePeer","./VideoPeerList","5","global","EVENT_LOGIN","EVENT_LOGOUT","EVENT_CHAIRMAN_SYNC","EVENT_CHAIRMAN_OFFLINE","EVENT_ASK_JOIN","EVENT_ASK_LEAVE","EVENT_JOIN","EVENT_LEAVE","EVENT_MESSAGE","EVENT_CALLSEND_RESULT","EVENT_NOTIFY","EVENT_SVR_NOTIFY","EVENT_SVR_REPLYR_ERROR","EVENT_SVR_RELAY","EVENT_LAN_SCAN_RESULT","EVENT_AUDIO_SYNC","EVENT_AUDIO_CTRL_VOLUME","EVENT_VIDEO_LOST","EVENT_VIDEO_SYNC","EVENT_VIDEO_OPEN","EVENT_VIDEO_JOIN","EVENT_VIDEO_CLOSE","EVENT_VIDEO_FRAME_STAT","EVENT_VIDEO_CAMERA","EVENT_VIDEO_RECORD","EVENT_VIDEO_SYNC_1","EVENT_VIDEO_OPEN_1","EVENT_VIDEO_JOIN_1","EVENT_VIDEO_CLOSE_1","EVENT_VIDEO_FRAME_STAT_1","EVENT_VIDEO_CAMERA_1","EVENT_VIDEO_RECORD_1","AUDIO_Speech","AUDIO_NoSpeechSelf","AUDIO_NoSpeechPeer","AUDIO_NoSpeechSelfAndPeer","VIDEO_Normal","VIDEO_OnlyInput","VIDEO_OnlyOutput","VIDEO_RESPONSE_TIMEOUT","window","6","pgLibError","PG_ERR_System","PG_ERR_BadParam","PG_ERR_BadClass","PG_ERR_BadMethod","PG_ERR_BadObject","PG_ERR_BadStatus","PG_ERR_BadFile","PG_ERR_BadUser","PG_ERR_BadPass","PG_ERR_NoLogin","PG_ERR_Network","PG_ERR_Timeout","PG_ERR_Reject","PG_ERR_Busy","PG_ERR_Opened","PG_ERR_Closed","PG_ERR_Exist","PG_ERR_NoExist","PG_ERR_NoSpace","PG_ERR_BadType","PG_ERR_CheckErr","PG_ERR_BadServer","PG_ERR_BadDomain","PG_ERR_NoData","PG_ERR_Unknown","strErrors","pgLibErr2Str","7","_ParseInt","sVal","idefVal","parseInt","_AddrToReadable","sAddr","sAddrSect","split","sReadable","iIP0","iIP1","iIP2","iIP3","iIP","iWord1","iWord2","iWord3","iWord4","iWord5","iWord6","iWord7","toString","pgLibNode","PG_CLASS_Peer","PG_CLASS_Group","PG_CLASS_Data","PG_CLASS_File","PG_CLASS_Audio","PG_CLASS_Video","PG_ADD_COMMON_Sync","PG_ADD_COMMON_Error","PG_ADD_COMMON_Encrypt","PG_ADD_COMMON_Compress","PG_ADD_PEER_Self","PG_ADD_PEER_Server","PG_ADD_PEER_Static","PG_ADD_PEER_Digest","PG_ADD_PEER_Disable","PG_ADD_GROUP_Update","PG_ADD_GROUP_Master","PG_ADD_GROUP_Refered","PG_ADD_GROUP_NearPeer","PG_ADD_GROUP_Modify","PG_ADD_GROUP_Index","PG_ADD_GROUP_Offline","PG_ADD_GROUP_HearOnly","PG_ADD_FILE_TcpSock","PG_ADD_FILE_Flush","PG_ADD_FILE_PeerStop","PG_ADD_AUDIO_Conference","PG_ADD_AUDIO_ShowVolume","PG_ADD_AUDIO_OnlyInput","PG_ADD_AUDIO_OnlyOutput","PG_ADD_AUDIO_SendReliable","PG_ADD_AUDIO_NoSpeechSelf","PG_ADD_AUDIO_NoSpeechPeer","PG_ADD_AUDIO_MuteInput","PG_ADD_AUDIO_MuteOutput","PG_ADD_VIDEO_Conference","PG_ADD_VIDEO_Preview","PG_ADD_VIDEO_OnlyInput","PG_ADD_VIDEO_OnlyOutput","PG_ADD_VIDEO_FrameStat","PG_ADD_VIDEO_DrawThread","PG_ADD_VIDEO_OutputExternal","PG_ADD_VIDEO_OutputExtCmp","PG_ADD_VIDEO_FilterDecode","PG_METH_COMMON_Sync","PG_METH_COMMON_Error","PG_METH_COMMON_SetOption","PG_METH_COMMON_GetOption","PG_METH_PEER_Login","PG_METH_PEER_Logout","PG_METH_PEER_Status","PG_METH_PEER_Call","PG_METH_PEER_Message","PG_METH_PEER_SetAddr","PG_METH_PEER_GetAddr","PG_METH_PEER_DigGen","PG_METH_PEER_DigVerify","PG_METH_PEER_CheckInfo","PG_METH_PEER_LanScan","PG_METH_PEER_AgentLogin","PG_METH_PEER_AgentLogout","PG_METH_PEER_AgentMessage","PG_METH_PEER_ReloginReply","PG_METH_PEER_KickOut","PG_METH_PEER_AccessCtrl","PG_METH_PEER_PushOption","PG_METH_GROUP_Modify","PG_METH_GROUP_Update","PG_METH_GROUP_Master","PG_METH_DATA_Message","PG_METH_FILE_Put","PG_METH_FILE_Get","PG_METH_FILE_Status","PG_METH_FILE_Cancel","PG_METH_AUDIO_Open","PG_METH_AUDIO_Close","PG_METH_AUDIO_CtrlVolume","PG_METH_AUDIO_ShowVolume","PG_METH_AUDIO_Speech","PG_METH_AUDIO_Record","PG_METH_VIDEO_Open","PG_METH_VIDEO_Close","PG_METH_VIDEO_Move","PG_METH_VIDEO_Join","PG_METH_VIDEO_Leave","PG_METH_VIDEO_Camera","PG_METH_VIDEO_Record","PG_METH_VIDEO_Transfer","PG_METH_VIDEO_FrameStat"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GAgBxeN,EAAQ,gBACRA,EAAQ,eACRA,EAAQ,0BAueRW,KAAKC,UAAY,SAASC,EAAOC,GAEjB,KADDH,KAAKI,OAAOC,cAAcH,EAAO,UAEpCC,GAAYH,KAAKM,WACjBN,KAAKO,YAAY,4BAA8BJ,EAAW,IAAK,GAAG,GAGlEA,GAAYH,KAAKM,WACjBN,KAAKQ,aAAa,KAO9BR,KAAKS,UAAY,SAASP,EAAOC,EAAUO,GACvCV,KAAKW,UAAU,cAEf,IAAIC,EAAO,GACPC,EAAS,GACTC,EAAOZ,EAAMa,QAAQ,KAOzB,GAJIF,EAFO,EAAPC,GACAF,EAAOV,EAAMc,UAAU,EAAGF,GACjBZ,EAAMc,UAAUF,EAAO,IAEvBZ,EAED,OAARU,EAAe,CACf,IAAIK,EAAQjB,KAAKkB,kBAAkBf,GACnCH,KAAKmB,UAAU,UAAWN,EAAQI,GAItC,OAFAjB,KAAKI,OAAOgB,eAAejB,EAAU,EAAG,GAAIO,GAErC,GAIXV,KAAKqB,aAAe,SAASnB,EAAOC,GAChC,IAAIc,EAAQjB,KAAKkB,kBAAkBf,GAC/BS,EAAO,GACPC,EAAS,GACTC,EAAOZ,EAAMa,QAAQ,KAQzB,OALIF,EAFO,EAAPC,GACAF,EAAOV,EAAMc,UAAU,EAAGF,GACjBZ,EAAMc,UAAUF,EAAO,IAEvBZ,EAGD,QAARU,EACOZ,KAAKmB,UAAU,UAAW,GAAIF,GACtB,SAARL,EACAZ,KAAKmB,UAAU,WAAY,GAAIF,GACvB,OAARL,EACAZ,KAAKmB,UAAU,UAAWN,EAAQI,IAC1B,UAARL,GAGQ,QAARA,GACPZ,KAAKsB,UAAUnB,GAFR,IAqFfH,KAAKuB,YAAc,SAASC,EAAMtB,GAC9B,IAAIuB,EAAOzB,KAAKI,OAAOC,cAAcH,EAAO,UACxC,KAAO,IACHF,KAAK0B,mBACL1B,KAAKO,YAAY,4BAA8BiB,EAAO,IAAK,GAAG,IAG7DxB,KAAK2B,QAAQC,QAAU5B,KAAK2B,QAAQE,WACrC7B,KAAK8B,SAASN,GAElBxB,KAAKmB,UAAUY,gBAAiBN,EAAMD,KAI9CxB,KAAKgC,aAAe,SAASR,EAAMtB,GAC/B,IACI+B,EAAQjC,KAAKI,OAAOC,cAAcH,EAAO,QACzCgC,EAASlC,KAAKI,OAAOC,cAAcH,EAAO,SAC1C,MAAQ,GAHDF,KAIFmC,aAAaX,EAAMU,IAOhClC,KAAKmC,aAAe,SAAShC,EAAU+B,GACnC,IAAIT,EAAOW,mBAEPnB,EAAQjB,KAAKkB,kBAAkBf,GACnCH,KAAKmB,UAAUM,EAAMS,EAAQjB,KAoE/B,CAACoB,yBAAyB,EAAEC,eAAe,EAAEC,cAAc,IAAIC,EAAE,CAAC,SAASnD,EAAQU,EAAOJ,GAC5F,SAAS8C,EAAUtC,EAASuC,GAExB1C,KAAK2C,KAAOD,EAEZ1C,KAAKG,SAAWA,EAIhBH,KAAK4C,oBAAsB,EAC3B5C,KAAK6C,oBAAqB,EAG1B7C,KAAK8C,kBAAoB,GACzB9C,KAAK+C,iBAAmB,GAExB/C,KAAKgD,uBAAyB,EAC9BhD,KAAKiD,sBAAwB,EAC7BjD,KAAKkD,wBAA0B,EAC/BlD,KAAKmD,eAAiBC,sBAGtBpD,KAAKqD,kBAAoB,GACzBrD,KAAKsD,iBAAmB,GAExBtD,KAAKuD,uBAAyB,EAC9BvD,KAAKwD,sBAAwB,EAC7BxD,KAAKyD,wBAA0B,EAC/BzD,KAAK0D,eAAiBN,sBAG1BX,EAAUkB,UAAUC,WAAa,SAAUzD,GAC5BH,KACNG,SAAWA,GAEpBsC,EAAUkB,UAAUE,WAAa,WAE7B,OADW7D,KACCG,UAGhBsC,EAAUkB,UAAUG,qBAAuB,SAASC,GACrC/D,KACN4C,oBAAsBmB,EADhB/D,KAEN6C,oBAAqB,GAE9BJ,EAAUkB,UAAUK,mBAAqB,SAAUD,GAE/C,OAA0C,GAArCA,EADM/D,KACQ4C,qBAAyD,GADjE5C,KAC0C4C,sBAD1C5C,KAC4E6C,qBAD5E7C,KAEF6C,oBAAqB,IASlCJ,EAAUkB,UAAUM,oBAAsB,SAASC,GAE/C,IACIvB,EAAO3C,KAAK2C,KAChB,MAAe,IAAZuB,EACQ,IAGkB,IANlBlE,KAMF+C,mBANE/C,KAOF8C,kBAAoBoB,EAPlBlE,KAQF+C,iBAAmBJ,EAAKwB,UAAUD,IARhClE,KAUC+C,mBAGhBN,EAAUkB,UAAUS,oBAAsB,SAASF,GAE/C,IACIvB,EAAO3C,KAAK2C,KAChB,MAAe,IAAZuB,EACQ,IAGkB,IANlBlE,KAMFsD,mBANEtD,KAOFqD,kBAAoBa,EAPlBlE,KAQFsD,iBAAmBX,EAAKwB,UAAUD,IARhClE,KAUC+C,mBAGhBN,EAAUkB,UAAUU,eAAiB,SAAUN,GAChC/D,KACNgD,uBAAyBe,EADnB/D,KAENmD,eAAiBmB,yBAG1B7B,EAAUkB,UAAUY,oBAAsB,SAAUR,GAEhD,OAAqC,EAD1B/D,KACCgD,wBAAqE,GAAvCe,EAD/B/D,KAC6CgD,wBAG5DP,EAAUkB,UAAUa,iBAAmB,SAAS9D,EAASqD,GAC1C/D,KACNiD,sBAAwBc,EADlB/D,KAENkD,wBAA0BxC,EAFpBV,KAGNmD,eAAiBsB,0BAG1BhC,EAAUkB,UAAUe,sBAAwB,SAAUX,GAElD,OAAoC,EADzB/D,KACCiD,uBAAmE,GAAtCc,EAD9B/D,KAC4CiD,uBAG3DR,EAAUkB,UAAUgB,iBAAmB,SAAUZ,GAC7C,IAAIa,EAAO5E,KACX4E,EAAKhC,oBAAsBmB,EAC3Ba,EAAK5B,uBAAyB,EAC9B4B,EAAK3B,sBAAwB,EAC7B2B,EAAK1B,wBAA0B,EAC/B0B,EAAKzB,eAAiB0B,sBAG1BpC,EAAUkB,UAAUmB,gBAAkB,WAClC,IAAIF,EAAO5E,KAEX4E,EAAK5B,uBAAyB,EAC9B4B,EAAK3B,sBAAwB,EAC7B2B,EAAK1B,wBAA0B,EACD,IAA1B0B,EAAK9B,oBAJE9C,KAKF+E,WAAWH,EAAK9B,mBACrB8B,EAAK9B,kBAAoB,GACzB8B,EAAK7B,iBAAmB,IAE5B6B,EAAKzB,eAAiBC,uBAG1BX,EAAUkB,UAAUqB,eAAiB,SAAUjB,GAChC/D,KACNuD,uBAAyBQ,EADnB/D,KAEN0D,eAAiBY,yBAG1B7B,EAAUkB,UAAUY,oBAAsB,SAAUR,GAEhD,OAAqC,EAD1B/D,KACCgD,wBAAqE,GAAvCe,EAD/B/D,KAC6CgD,wBAG5DP,EAAUkB,UAAUsB,iBAAmB,SAASvE,EAASqD,GAC1C/D,KACNwD,sBAAwB9C,EADlBV,KAENyD,wBAA0BM,EAFpB/D,KAGN0D,eAAiBe,0BAG1BhC,EAAUkB,UAAUY,oBAAsB,SAAUR,GAEhD,OAAqC,EAD1B/D,KACCgD,wBAAqE,GAAvCe,EAD/B/D,KAC6CgD,wBAG5DP,EAAUkB,UAAUuB,iBAAmB,SAAUnB,GAC7C,IAAIa,EAAO5E,KACX4E,EAAKhC,oBAAsBmB,EAC3Ba,EAAKrB,uBAAyB,EAC9BqB,EAAKpB,sBAAwB,EAC7BoB,EAAKnB,wBAA0B,EAC/BmB,EAAKlB,eAAiBmB,sBAG1BpC,EAAUkB,UAAUwB,gBAAkB,WAClC,IAAIP,EAAO5E,KAEX4E,EAAKrB,uBAAyB,EAC9BqB,EAAKpB,sBAAwB,EAC7BoB,EAAKnB,wBAA0B,EACD,IAA1BmB,EAAKvB,oBAJErD,KAKF+E,WAAWH,EAAKvB,mBACrBuB,EAAKvB,kBAAoB,GACzBuB,EAAKtB,iBAAmB,IAE5BsB,EAAKlB,eAAiBN,uBAG1BX,EAAUkB,UAAUyB,QAAU,WACfpF,KACN8E,kBADM9E,KAENmF,mBAITpF,EAAOJ,QAAU8C,GACf,IAAI4C,EAAE,CAAC,SAAShG,EAAQU,EAAOJ,GACjC,IAAI2F,EAAOjG,EAAQ,eAEnB,SAASkG,EAAc7C,GACnB1C,KAAK2C,KAAOD,EACZ1C,KAAKwF,MAAQ,GAGjBD,EAAc5B,UAAU8B,OAAS,SAAStF,GAEtC,GAAsB,iBAAZA,EACN,MAAO,CACHuF,OAAS,KACTC,KAAM,GAId,IAAK,IAAIzG,EAAI,EAAEA,EARJc,KAQawF,MAAM3F,OAAQX,IAAK,CACvC,GATOc,KASEwF,MAAMtG,GAAGiB,UAAYA,EAC1B,MAAO,CACHuF,OAXD1F,KAWewF,MAAMtG,GACpByG,IAAKzG,GAGbA,IAEJ,MAAO,CACHwG,OAAS,KACTC,KAAM,IAIdJ,EAAc5B,UAAUiC,IAAM,SAASzF,GACnC,IACIwC,EAAO3C,KAAK2C,KACZkD,EAFO7F,KAEIyF,OAAOtF,GACtB,GAAiB,MAAd0F,EAAIH,OACH,OAAOG,EAAIH,OAEf,IAAII,EAAQ,IAAIR,EAAKnF,EAASwC,GAE9B,OARW3C,KAONwF,MAAMO,KAAKD,GACTA,GAGXP,EAAc5B,UAAUqC,SAAW,SAASC,GACrCA,EAAQ,GAAajG,KAAKwF,MAAM3F,QAOvC0F,EAAc5B,UAAUuC,OAAS,SAAS/F,GACtC,IACI0F,EADO7F,KACIyF,OAAOtF,IACR,EAAX0F,EAAIF,KAFI3F,KAGFwF,MAAMW,OAAON,EAAIF,IAAK,IAKnCJ,EAAc5B,UAAUyC,MAAQ,WAG5B,IAFA,IACIlH,EAAI,EACDA,EAFIc,KAEKwF,MAAM3F,QAFXG,KAGFwF,MAAMtG,GAAGkG,UACdlG,IAJOc,KAONwF,MAAQ,IAGjBD,EAAc5B,UAAU0C,WAAa,SAASC,EAASC,GACnD,GAAsB,mBAAZD,EAIV,IADA,IACSpH,EAAI,EAAGA,EADLc,KACcwF,MAAM3F,OAAQX,IACnCoH,EAFOtG,KAEOwF,MAAMtG,GAAGA,EAAEqH,IAIjCxG,EAAOJ,QAAU4F,GACf,CAACiB,cAAc,IAAIC,EAAE,CAAC,SAASpH,EAAQU,EAAOJ,GAiChCN,EAAQ,oBACGA,EAAQ,0BACfA,EAAQ,mBAAmBqH,QAF/C,IAIIC,EAAY,QACZC,EAAU,KAGd,SAASC,IACR7G,KAAK8G,aAAc,EACnB9G,KAAK+G,YAAc,GACnB/G,KAAKgH,SAAW,GAChBhH,KAAKiH,iBAAkB,EAIxB,SAASC,EAAgBvE,EAAMwE,GAE9B,OAAKxE,QAAiC,IAAjBA,EAAY,QAM5BwE,GAAuD,mBAA5BA,EAAuB,SAKvDnH,KAAK4G,QAAUA,EAEf5G,KAAKoH,cAAe,EACpBpH,KAAKqH,UAAW,EAChBrH,KAAKsH,cAAe,EAGpBtH,KAAKuH,OAAS,IAAIC,QAElBxH,KAAKyH,YAAc,IAAIC,SACvB1H,KAAK2B,QAAU,IAAI+F,SACnB1H,KAAK2H,SAAW,IAAIC,UACpB5H,KAAK6H,QAAU,IAAIC,SACnB9H,KAAK+H,UAAY,IAAIlB,EAIrB7G,KAAKI,OAASuC,EACd3C,KAAKgI,mBAAqBb,EAK1BnH,KAAKM,UAAY,GACjBN,KAAKiI,WAAa,GAClBjI,KAAKkI,aAAe,GAEpBlI,KAAKmI,gBAAkB,GAavBnI,KAAKoI,aAAe,SAAUvH,EAAQwH,GACrC,OAAOC,eAORtI,KAAKuI,YAAc,SAAUF,KAW7BrI,KAAKwI,WAAa,SAAUC,GAC3B,OAAO,GAQRzI,KAAK0I,UAAY,WAChB,OAAO,GAUR1I,KAAK2I,UAAY,SAAU1H,EAAOiD,GACjC,OAAOlE,KAAK4I,WAAW3H,EAAOiD,GAAU,IASzClE,KAAK6I,WAAa,SAAU5H,EAAOiD,GAClC,OAAOlE,KAAK4I,WAAW3H,EAAOiD,GAAU,IAQ1ClE,KAAK8I,WAAa,SAAU7H,GAExB,GAAmB,MAAfjB,KAAKI,OAAT,CAIA,IAAKJ,KAAK2H,SAASoB,cAEf,OADA/I,KAAKW,UAAU,cACR,EAEX,IAAKX,KAAK2H,SAASqB,eAEf,OADAhJ,KAAKW,UAAU,kCACR,EAEX,IAAIR,EAAWH,KAAKiJ,cAAchI,GAG9B6E,EAAQoD,iBAAiB/I,GAG7B,OAFAH,KAAKmJ,YAAYrD,GACjB9F,KAAKW,UAAU,wBACR,EAjBHX,KAAKW,UAAU,+CAoBtBX,KAAKW,UAAY,SAAUyI,GACtBpJ,KAAKgI,mBAAmBqB,aAA+D,mBAAxCrJ,KAAKgI,mBAA8B,aACrFhI,KAAKgI,mBAAmBqB,YAAY,oBAAsBD,IAQ5DpJ,KAAKsJ,SAAW,SAAUC,EAAMC,GAC/B,IAAIC,EAAOC,OAAOF,GAClB,IACCC,EAAOC,OAAOH,GACb,MAAOzK,GACR2K,EAAOC,OAAOF,GAEf,OAAOC,GAIRzJ,KAAKmB,UAAY,SAAUM,EAAMvB,EAAOe,GACnCjB,KAAKgI,mBAAmB2B,SAAuD,mBAApC3J,KAAKgI,mBAA0B,SAAiD,GAA9BhI,KAAK2H,SAASL,cAC9GtH,KAAKgI,mBAAmB2B,QAAQlI,EAAMvB,EAAOe,IAI/CjB,KAAK4J,WAAa,SAAUC,GAC3B,IAAIpI,EAAOzB,KAAKI,OAAOC,cAAcwJ,EAAO,OAChC,eAARpI,EACHzB,KAAK8J,eACK,kBAAoB,GAC9B9J,KAAK+J,0BAKP/J,KAAKgK,SAAW,SAAS7J,GACxB,OAAsC,GAA/BA,EAASY,QAAQ4F,IAGzB3G,KAAKiJ,cAAgB,SAAUhI,GAC9B,OAAgC,GAA5BA,EAAMF,QAAQ4F,GACVA,EAAY1F,EAEbA,GAGRjB,KAAKkB,kBAAoB,SAAUf,GAElC,OAAW,GADDA,EAASY,QAAQ4F,GAEnBxG,EAASa,UAAU,GAEpBb,GAcRH,KAAKiK,cAAgB,SAAUzI,EAAM0I,EAAOhK,EAAOiK,EAAShK,GAC3D,IACIQ,EAAYX,KAAKW,UACjBgC,EAAO3C,KAAKI,OAGhB,GADAO,EAAU,qBAAuBa,EAAO,KAAO0I,EAAQ,KAAOhK,EAAQ,KAAOC,GAC7C,iBAA7BwC,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,IAGS,iBAA7BmB,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,GAIvB,OAAO,QAERxB,KAAKqK,SAAW,SAAU7I,EAAM8I,EAAMpK,EAAOW,GAC5C,IACIF,EAAYX,KAAKW,UACjBgC,EAAO3C,KAAKI,OAKhB,GAHAO,EAAU,YAAca,EAAO,KAAO8I,EAAO,KAAOpK,EAAQ,KAAOW,GAGnC,iBAA7B8B,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,IAGS,iBAA7BmB,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,IAGS,kBAA7BmB,EAAKyH,eAAe5I,GAGvB,OAAO,MA/OP+I,MAAM,gDACC,OAPPA,MAAM,qCACC,MAyPTrD,EAAgBvD,UAAU6G,cAAgB,SAAUC,GAEnD,OADAzK,KAAKyK,kBAAoBA,GAClB,GAGRvD,EAAgBvD,UAAU+G,WAAa,SAAUC,GAChD,OAAgB,MAAZA,IAGJ3K,KAAK4K,eAAiB,QAAUD,EAASE,KACxC,WAAaF,EAASG,OACtB,YAAcH,EAASI,QACvB,aAAeJ,EAASK,SACxB,cAAgBL,EAASM,UACzB,aAAeN,EAASO,SACxB,cAAgBP,EAASQ,UACzB,gBAAkBR,EAASS,YAC3B,gBAAkBT,EAASU,YAC3B,gBAAkBV,EAASW,YAC3B,gBAAkBX,EAASY,YAC3B,eAAiBZ,EAASa,YACpB,IASRtE,EAAgBvD,UAAU8H,QAAU,WACnC,OAAOzL,KAAKI,QASb8G,EAAgBvD,UAAU+H,YAAc,WACvC,OAAO1L,KAAKuH,OAAOoE,UAkCpBzE,EAAgBvD,UAAUiI,YAAc,SAAUC,EAAOC,EAAOC,EAAUC,EAAYC,GACrF,OAAOjM,KAAKkM,WAAW,GAAI,GAAIL,EAAOC,EAAOC,EAAUC,EAAYC,IAEpE/E,EAAgBvD,UAAUuI,WAAa,SAAUC,EAAOC,EAAQP,EAAOC,EAAOC,EAAUC,EAAYC,GAEnG,GAAKjM,KAAK2H,SAASP,aAyClBpH,KAAKW,UAAU,yCAxCf,GAAa,IAATwL,GAAeA,EAAMtM,OAAS,IAEjC,MAAmB,IAAfoM,OACHjM,KAAKW,UAAU,0BAOhBX,KAAKuH,OAAO8E,KAAKR,EAAOC,EAAOG,EAAajM,KAAKI,QACjDJ,KAAKsM,UAAY3F,EAAYyF,EAC7BpM,KAAKuM,MAAQ,MAAQJ,EACrBnM,KAAKwM,MAAQ,MAAQL,EACrBnM,KAAKyM,MAAQ,MAAQN,EACrBnM,KAAK0M,OAAS,OAASP,EACvBnM,KAAK2M,MAAQ,MAAQR,EACrBnM,KAAK4M,eAAiB,eACtB5M,KAAK6M,eAAiBd,EACtB/L,KAAKkI,aAAe8D,EAEpBhM,KAAKyH,YAAY4E,KAAKF,EAAOC,EAAQP,GAErC7L,KAAK8M,eAAiB,GACtB9M,KAAKmI,gBAAkB,GAElBnI,KAAK+M,WAAW,KAKrB/M,KAAK2H,SAASP,cAAe,EACxBpH,KAAKyH,YAAY7F,SACrB5B,KAAK2B,QAAQ0K,KAAKF,EAAOC,EAAQpM,KAAKuH,OAAOsE,OAC7C7L,KAAK6H,QAAQmF,UACbhN,KAAKiN,kBAEC,IAVNjN,KAAKW,UAAU,kCACfX,KAAKoG,SACE,IAcV,OADApG,KAAK2H,SAASP,cAAe,GAQ5BpH,KAAKoG,MAAQ,WAEZpG,KAAKkN,YACLlN,KAAK2H,SAASqF,WAQfhN,KAAKmN,QAAU,SAAUlM,GACxB,GAAmB,MAAfjB,KAAKI,OAAgB,CACxB,GAAa,IAATa,EACH,OAAO,EAGR,IAAId,EAAWH,KAAKiJ,cAAchI,GAE9BmM,EAASpN,KAAKI,OAAOgK,eAAejK,GACxC,MAAc,iBAAViN,IAIU,IAAVA,GACHpN,KAAKI,OAAOiN,aAAalN,GAGnBH,KAAKI,OAAOkN,UAAUnN,EAAU,gBAAiB,GAAI,UAQ9DH,KAAKuN,WAAa,SAAUtM,GAC3B,GAAmB,MAAfjB,KAAKI,QACK,IAATa,EAAa,CAChB,IAAId,EAAWH,KAAKiJ,cAAchI,GAElCjB,KAAKI,OAAOiN,aAAalN,KAK9BJ,EAAOJ,QAAUuH,GACf,CAACsG,mBAAmB,EAAEC,kBAAkB,EAAEpL,yBAAyB,IAAIqL,EAAE,CAAC,SAASrO,EAAQU,EAAOJ,IACpG,SAAWgO,GACXA,EAAOC,YAAc,QACrBD,EAAOE,aAAe,SAEtBF,EAAOG,oBAAsB,eAC7BH,EAAOI,uBAAyB,kBAChCJ,EAAO5L,gBAAkB,WACzB4L,EAAOvL,mBAAqB,cAE5BuL,EAAOK,eAAiB,UACxBL,EAAOM,gBAAkB,WACzBN,EAAOO,WAAa,OACpBP,EAAOQ,YAAc,QAErBR,EAAOS,cAAgB,UACvBT,EAAOU,sBAAwB,WAC/BV,EAAOW,aAAe,SACtBX,EAAOY,iBAAmB,YAC1BZ,EAAOa,uBAAyB,gBAChCb,EAAOc,gBAAkB,WAEzBd,EAAOe,sBAAwB,gBAE/Bf,EAAOgB,iBAAmB,YAC1BhB,EAAOiB,wBAA0B,kBAEjCjB,EAAOkB,iBAAmB,YAE1BlB,EAAOmB,iBAAmB,YAC1BnB,EAAOoB,iBAAmB,YAC1BpB,EAAOqB,iBAAmB,YAC1BrB,EAAOsB,kBAAoB,aAC3BtB,EAAOuB,uBAAyB,iBAChCvB,EAAOwB,mBAAqB,cAC5BxB,EAAOyB,mBAAqB,cAE5BzB,EAAO0B,mBAAqB,aAC5B1B,EAAO2B,mBAAqB,aAC5B3B,EAAO4B,mBAAqB,aAC5B5B,EAAO6B,oBAAsB,cAC7B7B,EAAO8B,yBAA2B,kBAClC9B,EAAO+B,qBAAuB,eAC9B/B,EAAOgC,qBAAuB,eAM9BhC,EAAOiC,aAAe,EACtBjC,EAAOkC,mBAAqB,EAC5BlC,EAAOmC,mBAAqB,EAC5BnC,EAAOoC,0BAA4B,EAKnCpC,EAAOqC,aAAe,EACtBrC,EAAOsC,gBAAkB,EACzBtC,EAAOuC,iBAAmB,EAK1BvC,EAAOvK,sBAAyB,EAChCuK,EAAOrJ,wBAA0B,EACjCqJ,EAAOlJ,yBAA2B,EAClCkJ,EAAO9I,qBAAuB,EAE9B8I,EAAOwC,uBAAyB,KAC7BvQ,KAAKI,KAAuB,oBAAX2N,OAAyBA,OAAyB,oBAAT/I,KAAuBA,KAAyB,oBAAXwL,OAAyBA,OAAS,KAClI,IAAIC,EAAE,CAAC,SAAShR,EAAQU,EAAOJ,IACjC,SAAWgO,GAEX,IA2BI2C,EAAa,GAEjB3C,EAAOrF,cAAgBgI,EAAWhI,cA7Bd,EA8BpBqF,EAAO4C,cAAgBD,EAAWC,cA7Bd,EA8BpB5C,EAAO6C,gBAAkBF,EAAWE,gBA7Bd,EA8BtB7C,EAAO8C,gBAAkBH,EAAWG,gBA7Bd,EA8BtB9C,EAAO+C,iBAAmBJ,EAAWI,iBA7Bd,EA8BvB/C,EAAOgD,iBAAmBL,EAAWK,iBA7Bd,EA8BvBhD,EAAOiD,iBAAmBN,EAAWM,iBA7Bd,EA8BvBjD,EAAOkD,eAAiBP,EAAWO,eA7Bd,EA8BrBlD,EAAOmD,eAAiBR,EAAWQ,eA7Bd,EA8BrBnD,EAAOoD,eAAiBT,EAAWS,eA7Bd,EA8BrBpD,EAAOqD,eAAiBV,EAAWU,eA7Bd,GA8BrBrD,EAAOsD,eAAiBX,EAAWW,eA7Bd,GA8BrBtD,EAAOuD,eAAiBZ,EAAWY,eA7Bd,GA8BrBvD,EAAOwD,cAAgBb,EAAWa,cA7Bd,GA8BpBxD,EAAOyD,YAAcd,EAAWc,YA7Bd,GA8BlBzD,EAAO0D,cAAgBf,EAAWe,cA7Bd,GA8BpB1D,EAAO2D,cAAgBhB,EAAWgB,cA7Bd,GA8BpB3D,EAAO4D,aAAejB,EAAWiB,aA7Bd,GA8BnB5D,EAAO6D,eAAiBlB,EAAWkB,eA7Bd,GA8BrB7D,EAAO8D,eAAiBnB,EAAWmB,eA7Bd,GA8BrB9D,EAAO+D,eAAiBpB,EAAWoB,eA7Bd,GA8BrB/D,EAAOgE,gBAAkBrB,EAAWqB,gBA7Bd,GA8BtBhE,EAAOiE,iBAAmBtB,EAAWsB,iBA7Bd,GA8BvBjE,EAAOkE,iBAAmBvB,EAAWuB,iBA7Bd,GA8BvBlE,EAAOmE,cAAgBxB,EAAWwB,cA7Bd,GA8BpBnE,EAAOoE,eAAiBzB,EAAWyB,eA7Bd,IA+BrBpE,EAAO2C,WAAWA,EAElB,IAAI0B,EAAY,CACZ,gBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,cACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,kBACA,mBACA,mBACA,iBAUJrE,EAAO2C,WAAWA,EAClB3C,EAAOsE,aARP,SAAsB3H,GAClB,OAAGA,EAAK,GAAa0H,EAAUnS,QAAlByK,EACF,iBAEJ0H,EAAU1H,MAKlB1K,KAAKI,KAAuB,oBAAX2N,OAAyBA,OAAyB,oBAAT/I,KAAuBA,KAAyB,oBAAXwL,OAAyBA,OAAS,KAClI,IAAI8B,EAAE,CAAC,SAAS7S,EAAQU,EAAOJ,IACjC,SAAWgO,GAEX,SAASwE,EAAUC,EAAMC,GACrB,IACI,MAAmB,iBAARD,GAA4B,IAARA,EACpBE,SAASF,GAEbC,EACT,MAAOvT,GACL,OAAOuT,GAKf,SAASE,EAAgBC,GACrB,IACI,IAAIC,EAAYD,EAAME,MAAM,IAAK,GACjC,GAAID,EAAU5S,OAAS,EACnB,OAAO2S,EAGX,IAAIG,EAAY,GACZC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACX,GAAoB,KAAhBN,EAAU,IACM,KAAhBA,EAAU,IACM,KAAhBA,EAAU,IACM,KAAhBA,EAAU,IACM,KAAhBA,EAAU,GAAW,CACrB,IAAIO,EAAMV,SAASG,EAAU,GAAI,IAKjCE,GAJAC,EAAQI,GAAO,GAAM,KAID,KAHpBH,EAAQG,GAAO,GAAM,KAGY,KAFjCF,EAAQE,GAAO,EAAK,KAE0B,KAD9CD,EAAc,IAANC,GACmD,IAAMP,EAAU,OACxE,CACHG,EAAON,SAASG,EAAU,GAAI,IAC9BI,EAAOP,SAASG,EAAU,GAAI,IAC9BK,EAAOR,SAASG,EAAU,GAAI,IAC9BM,EAAOT,SAASG,EAAU,GAAI,IAE9B,IACIQ,EAAiB,MAAPL,EAEVM,EAAUL,GAAQ,GAAM,MACxBM,EAAiB,MAAPN,EAEVO,EAAUN,GAAQ,GAAM,MACxBO,EAAiB,MAAPP,EAEVQ,EAAUP,GAAQ,GAAM,MACxBQ,EAAiB,MAAPR,EAEdJ,EAAa,KAZCC,GAAQ,GAAM,OAYFY,SAAS,IAAM,IAAMP,EAAOO,SAAS,IAAM,IAAMN,EAAOM,SAAS,IACvF,IAAML,EAAOK,SAAS,IAAM,IAAMJ,EAAOI,SAAS,IAAM,IAAMH,EAAOG,SAAS,IAC9E,IAAMF,EAAOE,SAAS,IAAM,IAAMD,EAAOC,SAAS,IAAM,KAAOf,EAAU,GAGjF,OAAOE,EACT,MAAO7T,GACL,OAAO0T,GAlDf7E,EAAOwE,UAAWA,EAqDlBxE,EAAO4E,gBAAkBA,EAEzB,IAAIkB,EAAY,GAChBA,EAAUtB,UAAWA,EACrBsB,EAAUlB,gBAAkBA,EAG5B5E,EAAO+F,cAAgBD,EAAUC,cAAgB,gBACjD/F,EAAOgG,eAAiBF,EAAUE,eAAiB,iBACnDhG,EAAOiG,cAAgBH,EAAUG,cAAgB,gBACjDjG,EAAOkG,cAAgBJ,EAAUI,cAAgB,gBACjDlG,EAAOmG,eAAiBL,EAAUK,eAAiB,iBACnDnG,EAAOoG,eAAiBN,EAAUM,eAAiB,iBAEnDpG,EAAOqG,mBAAqBP,EAAUO,mBAAqB,MAC3DrG,EAAOsG,oBAAsBR,EAAUQ,oBAAsB,OAC7DtG,EAAOuG,sBAAwBT,EAAUS,sBAAwB,OACjEvG,EAAOwG,uBAAyBV,EAAUU,uBAAyB,OAEnExG,EAAOyG,iBAAmBX,EAAUW,iBAAmB,EACvDzG,EAAO0G,mBAAqBZ,EAAUY,mBAAqB,EAC3D1G,EAAO2G,mBAAqBb,EAAUa,mBAAqB,EAC3D3G,EAAO4G,mBAAqBd,EAAUc,mBAAqB,EAC3D5G,EAAO6G,oBAAsBf,EAAUe,oBAAsB,GAE7D7G,EAAO8G,oBAAsBhB,EAAUgB,oBAAsB,EAC7D9G,EAAO+G,oBAAsBjB,EAAUiB,oBAAqB,EAC5D/G,EAAOgH,qBAAuBlB,EAAUkB,qBAAuB,EAC/DhH,EAAOiH,sBAAwBnB,EAAUmB,sBAAwB,EACjEjH,EAAOkH,oBAAsBpB,EAAUoB,oBAAsB,GAC7DlH,EAAOmH,mBAAqBrB,EAAUqB,mBAAqB,GAC3DnH,EAAOoH,qBAAuBtB,EAAUsB,qBAAuB,GAC/DpH,EAAOqH,sBAAwBvB,EAAUuB,sBAAwB,IAEjErH,EAAOsH,oBAAsBxB,EAAUwB,oBAAsB,EAC7DtH,EAAOuH,kBAAoBzB,EAAUyB,kBAAoB,EACzDvH,EAAOwH,qBAAuB1B,EAAU0B,qBAAuB,EAE/DxH,EAAOyH,wBAA0B3B,EAAU2B,wBAA0B,EACrEzH,EAAO0H,wBAA0B5B,EAAU4B,wBAA0B,EACrE1H,EAAO2H,uBAAyB7B,EAAU6B,uBAAwB,EAClE3H,EAAO4H,wBAA0B9B,EAAU8B,wBAA0B,EACrE5H,EAAO6H,0BAA4B/B,EAAU+B,0BAA4B,GACzE7H,EAAO8H,0BAA4BhC,EAAUgC,0BAA4B,GACzE9H,EAAO+H,0BAA4BjC,EAAUiC,0BAA4B,GACzE/H,EAAOgI,uBAAyBlC,EAAUkC,uBAAyB,IACnEhI,EAAOiI,wBAA0BnC,EAAUmC,wBAA0B,IAErEjI,EAAOkI,wBAA0BpC,EAAUoC,wBAA0B,EACrElI,EAAOmI,qBAAuBrC,EAAUqC,qBAAuB,EAC/DnI,EAAOoI,uBAAyBtC,EAAUsC,uBAAyB,EACnEpI,EAAOqI,wBAA0BvC,EAAUuC,wBAA0B,EACrErI,EAAOsI,uBAAyBxC,EAAUwC,uBAAyB,GACnEtI,EAAOuI,wBAA0BzC,EAAUyC,wBAA0B,GACrEvI,EAAOwI,4BAA8B1C,EAAU0C,4BAA8B,GAC7ExI,EAAOyI,0BAA4B3C,EAAU2C,0BAA4B,IACzEzI,EAAO0I,0BAA4B5C,EAAU4C,0BAA4B,IAEzE1I,EAAO2I,oBAAsB7C,EAAU6C,oBAAsB,EAC7D3I,EAAO4I,qBAAuB9C,EAAU8C,qBAAuB,EAC/D5I,EAAO6I,yBAA2B/C,EAAU+C,yBAA2B,EACvE7I,EAAO8I,yBAA2BhD,EAAUgD,yBAA2B,EAEvE9I,EAAO+I,mBAAqBjD,EAAUiD,mBAAqB,GAC3D/I,EAAOgJ,oBAAsBlD,EAAUkD,oBAAoB,GAC3DhJ,EAAOiJ,oBAAsBnD,EAAUmD,oBAAoB,GAC3DjJ,EAAOkJ,kBAAoBpD,EAAUoD,kBAAkB,GACvDlJ,EAAOmJ,qBAAuBrD,EAAUqD,qBAAqB,GAC7DnJ,EAAOoJ,qBAAuBtD,EAAUsD,qBAAqB,GAC7DpJ,EAAOqJ,qBAAuBvD,EAAUuD,qBAAqB,GAC7DrJ,EAAOsJ,oBAAsBxD,EAAUwD,oBAAoB,GAC3DtJ,EAAOuJ,uBAAyBzD,EAAUyD,uBAAuB,GACjEvJ,EAAOwJ,uBAAyB1D,EAAU0D,uBAAuB,GACjExJ,EAAOyJ,qBAAuB3D,EAAU2D,qBAAuB,GAC/DzJ,EAAO0J,wBAA0B5D,EAAU4D,wBAA0B,GACrE1J,EAAO2J,yBAA2B7D,EAAU6D,yBAA2B,GACvE3J,EAAO4J,0BAA4B9D,EAAU8D,0BAA4B,GACzE5J,EAAO6J,0BAA4B/D,EAAU+D,0BAA4B,GACzE7J,EAAO8J,qBAAuBhE,EAAUgE,qBAAuB,GAC/D9J,EAAO+J,wBAA0BjE,EAAUiE,wBAA0B,GACrE/J,EAAOgK,wBAA0BlE,EAAUkE,wBAA0B,GAErEhK,EAAOiK,qBAAuBnE,EAAUmE,qBAAqB,GAC7DjK,EAAOkK,qBAAuBpE,EAAUoE,qBAAqB,GAC7DlK,EAAOmK,qBAAuBrE,EAAUqE,qBAAqB,GAE7DnK,EAAOoK,qBAAuBtE,EAAUsE,qBAAuB,GAE/DpK,EAAOqK,iBAAmBvE,EAAUuE,iBAAmB,GACvDrK,EAAOsK,iBAAmBxE,EAAUwE,iBAAmB,GACvDtK,EAAOuK,oBAAsBzE,EAAUyE,oBAAsB,GAC7DvK,EAAOwK,oBAAsB1E,EAAU0E,oBAAsB,GAE7DxK,EAAOyK,mBAAqB3E,EAAU2E,mBAAqB,GAC3DzK,EAAO0K,oBAAsB5E,EAAU4E,oBAAsB,GAC7D1K,EAAO2K,yBAA2B7E,EAAU6E,yBAA2B,GACvE3K,EAAO4K,yBAA2B9E,EAAU8E,yBAA2B,GACvE5K,EAAO6K,qBAAuB/E,EAAU+E,qBAAuB,GAC/D7K,EAAO8K,qBAAuBhF,EAAUgF,qBAAuB,GAE/D9K,EAAO+K,mBAAqBjF,EAAUiF,mBAAqB,GAC3D/K,EAAOgL,oBAAsBlF,EAAUkF,oBAAqB,GAC5DhL,EAAOiL,mBAAqBnF,EAAUmF,mBAAqB,GAC3DjL,EAAOkL,mBAAqBpF,EAAUoF,mBAAqB,GAC3DlL,EAAOmL,oBAAsBrF,EAAUqF,oBAAsB,GAC7DnL,EAAOoL,qBAAuBtF,EAAUsF,qBAAsB,GAC9DpL,EAAOqL,qBAAuBvF,EAAUuF,qBAAsB,GAC9DrL,EAAOsL,uBAAyBxF,EAAUwF,uBAAyB,GACnEtL,EAAOuL,wBAA0BzF,EAAUyF,wBAA0B,GAErEvL,EAAO8F,UAAYA,IAEhB7T,KAAKI,KAAuB,oBAAX2N,OAAyBA,OAAyB,oBAAT/I,KAAuBA,KAAyB,oBAAXwL,OAAyBA,OAAS,KAClI,KAAK,GAAG,CAAC","file":"pgLibConference.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// function PG_NODE_CFG() {\r\n// \tthis.Type = 0;\r\n// \tthis.Option = 1;\r\n\r\n// \tthis.MaxPeer = 256;\r\n// \tthis.MaxGroup = 32;\r\n// \tthis.MaxObject = 512;\r\n// \tthis.MaxCast = 512;\r\n// \tthis.MaxHandle = 512;\r\n// \tthis.SKTBufSize0 = 128;\r\n// \tthis.SKTBufSize1 = 64;\r\n// \tthis.SKTBufSize2 = 256;\r\n// \tthis.SKTBufSize3 = 64;\r\n// \tthis.P2PTryTime = 1;\r\n// }\r\nrequire('./pgLibError');\r\nrequire('./pgLibNode');\r\nrequire('./pgLibConferenceConst');\r\n\r\nfunction pgLibNode(opts) {\r\n    this.option = opts;\r\n\r\n    this.LIB_VER = opts.Ver;\r\n\r\n    this.sUser = opts.sUser;\r\n    this.sPass = opts.sPass;\r\n\r\n    this.m_sObjSvrName = this.initSvrName = \"pgConnectSvr\";\r\n    this.m_sSvrAddr = this.initSvrAddr = opts.sSvrAddr;\r\n\r\n    this.m_sRelayAddr = opts.sRelayAddr;\r\n\r\n    this.bLogined = false;\r\n    this.m_bLogin = false;\r\n\r\n    this.m_sConfig_Control = \"Type=1;LogLevel0=1;LogLevel1=1\";\r\n    this.m_sConfig_Node = \"Type=0;Option=1;MaxPeer=256;MaxGroup=32;MaxObject=512;MaxMCast=512;MaxHandle=256;SKTBufSize0=128;SKTBufSize1=64;SKTBufSize2=256;SKTBufSize3=64;P2PTryTime=1\";\r\n\r\n    this.Node = opts.Node;\r\n    this.OnExtRequest = opts.OnExtRequest;\r\n    this.OnReply = opts.OnReply;\r\n\r\n    this.EventProc = opts.EventProc;\r\n    this.OutString = function() {\r\n        return opts.OutString || console;\r\n    };\r\n\r\n    this.timerStartRelogin = function(uDelay) {\r\n        var self = this;\r\n        setTimeout(function(self) {\r\n            self.NodeLogin();\r\n        }, uDelay * 1000, self);\r\n    };\r\n    this.ObjPeerParsePeer = function(sObjPeer) {\r\n        if (opts.ObjPeerParsePeer || typeof opts.ObjPeerParsePeer == \"function\") {\r\n            return opts.ObjPeerParsePeer(sObjPeer);\r\n        }\r\n        return sObjPeer;\r\n    };\r\n\r\n    this.m_bReportPeerInfo = true;\r\n}\r\n\r\npgLibNode.prototype.genNodeCfg = function(sInitParam) {\r\n    var Node = this.Node;\r\n    var iBufSize0 = _ParseInt(Node.omlGetContent(sInitParam, \"BufSize0\"), 128);\r\n    var iBufSize1 = _ParseInt(Node.omlGetContent(sInitParam, \"BufSize1\"), 128);\r\n    var iBufSize2 = _ParseInt(Node.omlGetContent(sInitParam, \"BufSize2\"), 512);\r\n    var iBufSize3 = _ParseInt(Node.omlGetContent(sInitParam, \"BufSize3\"), 128);\r\n    var iP2PTryTime = _ParseInt(Node.omlGetContent(sInitParam, \"P2PTryTime\"), 3);\r\n    return \"Type=0;Option=1;SKTBufSize0=\" + iBufSize0 +\r\n        \";SKTBufSize1=\" + iBufSize1 + \";SKTBufSize2=\" + iBufSize2 +\r\n        \";SKTBufSize3=\" + iBufSize3 + \";P2PTryTime=\" + iP2PTryTime;\r\n};\r\n\r\npgLibNode.prototype.NodeStart = function(sInitParam) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var sObjSvr = this.m_sObjSvrName;\r\n    var sSvrAddr = this.m_sSvrAddr;\r\n    var sRelayAddr = this.m_sRelayAddr;\r\n    if (Node == null) {\r\n        return false;\r\n    }\r\n\r\n    var iDigest = parseInt(Node.omlGetContent(sInitParam, \"Digest\"), 1);\r\n    // Config atx node.\r\n    Node.Control = \"Type=1;LogLevel0=1;LogLevel1=1\";\r\n    Node.Node = this.genNodeCfg(sInitParam);\r\n    Node.Class = \"PG_CLASS_Data:128;PG_CLASS_Video:128;PG_CLASS_Audio:128\";\r\n    Node.Local = \"Addr=0:0:0:127.0.0.1:0:0\";\r\n    Node.Server = \"Name=\" + sObjSvr + \";Addr=\" + sSvrAddr + \";Digest=\" + iDigest;\r\n    if (sRelayAddr && sRelayAddr != \"\" && typeof sRelayAddr == 'string') {\r\n        Node.Relay = \"(Relay0){(Type){0}(Load){0}(Addr){\" + sRelayAddr + \"}}\";\r\n    } else {\r\n        var iInd = sSvrAddr.lastIndexOf(':');\r\n        if (iInd > 0) {\r\n            var sSvrIP = sSvrAddr.substring(0, iInd);\r\n            Node.Relay = \"(Relay0){(Type){0}(Load){0}(Addr){\" + sSvrIP + \":443}}\";\r\n        }\r\n    }\r\n\r\n    self.m_Node.OnExtRequest = function(sObj, uMeth, sData, uHandle, sPeer) {\r\n        self.OnExtRequest(sObj, uMeth, sData, uHandle, sPeer);\r\n    };\r\n    self.m_Node.OnReply = function(sObj, iErr, sData, sParam) {\r\n        self.OnReply(sObj, iErr, sData, sParam);\r\n    };\r\n\r\n    // Start atx node.\r\n    if (!Node.Start(0)) {\r\n        self.OutString(\"NodeStart: Start node failed.\");\r\n        return false;\r\n    }\r\n\r\n\r\n    // Login to server.\r\n    if (!self.NodeLogin()) {\r\n        self.OutString(\"NodeStart: login failed.\");\r\n        self.NodeStop();\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n\r\n\r\npgLibNode.prototype.NodeStop = function() {\r\n    var self = this;\r\n    self.OutString(\"->NodeStop\");\r\n\r\n    if (self.m_Node == null) {\r\n        return;\r\n    }\r\n\r\n    self._NodeLogout();\r\n};\r\n\r\npgLibNode.prototype.NodeLogin = function() {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n    var sObjSvr = this.m_sObjSvrName;\r\n    var sUser = this.sUser;\r\n    var sPass = this.sPass;\r\n\r\n    OutString(\" NodeLogin begin \");\r\n    if (Node == null) {\r\n        return;\r\n    }\r\n    var sVersion = \"\";\r\n    var sVerTemp = Node.omlGetContent(Node.utilCmd(\"Version\", \"\"), \"Version\");\r\n    if (sVerTemp.length > 1) {\r\n        sVersion = sVerTemp.substring(1);\r\n    }\r\n\r\n    var sParam = \"(Ver){\" + sVersion + \".\" + self.LIB_VER + \"}\";\r\n    var sData = \"(User){\" + Node.omlEncode(sUser) + \"}(Pass){\" + Node.omlEncode(sPass) + \"}(Param){\" + sParam + \"}\";\r\n\r\n    // OutString(\"NodeLogin:Data=\" + sData);\r\n    var iErr = Node.ObjectRequest(sObjSvr, 32, sData, \"NodeLogin\");\r\n    if (iErr > 0) {\r\n        OutString(\"NodeLogin: Login failed. sObjUser = \" + sUser + \" iErr=\" + iErr);\r\n        return false;\r\n    }\r\n    OutString(\" NodeLogin end \");\r\n    return true;\r\n};\r\n\r\npgLibNode.prototype.NodeLogout = function() {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n    var sObjSvr = this.m_sObjSvrName;\r\n    var bLogined = this.bLogined;\r\n\r\n    OutString(\"pgLibNode -> NodeLogout begin\");\r\n    if (Node == null) {\r\n        return;\r\n    }\r\n\r\n    Node.ObjectRequest(sObjSvr, 33, \"\", \"NodeLogout\");\r\n    if (bLogined) {\r\n        self.EventProc(\"Logout\", \"\", \"\");\r\n    }\r\n    self.bLogined = false;\r\n};\r\n\r\npgLibNode.prototype.NodeRelogin = function(uDelay) {\r\n    var self = this;\r\n    var OutString = this.OutString;\r\n\r\n    OutString(\"pgLibNode NodeRelogin begin\");\r\n    self._NodeLogout();\r\n\r\n    self.timerStartRelogin(uDelay);\r\n};\r\n\r\npgLibNode.prototype.NodeRedirect = function(sRedirect) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n    var sObjSvr = this.m_sObjSvrName;\r\n    var sSvrAddr_old = this.m_sSvrAddr;\r\n\r\n    OutString(\"pgLibNode NodeRedirect begin\");\r\n    if (Node == null) {\r\n        return;\r\n    }\r\n    self._NodeLogout();\r\n\r\n    var sSvrName = Node.omlGetContent(sRedirect, \"SvrName\");\r\n    if (sSvrName && sSvrName != sObjSvr) {\r\n        Node.ObjectDelete(sObjSvr);\r\n        if (!Node.ObjectAdd(sSvrName, \"PG_CLASS_Peer\", \"\", (0x10000 | 0x2))) {\r\n            OutString(\"Redirect: Add server object failed\");\r\n            return;\r\n        }\r\n        sObjSvr = self.m_sObjSvrName = sSvrName;\r\n        sSvrAddr = self.m_sSvrAddr = \"\";\r\n    }\r\n    var sSvrAddr = Node.omlGetContent(sRedirect, \"SvrAddr\");\r\n    if (sSvrAddr && sSvrAddr != sSvrAddr_old) {\r\n        var sData = \"(Addr){\" + sSvrAddr + \"}(Proxy){}\";\r\n        var iErr = Node.ObjectRequest(self.m_sObjSvrName, 37, sData, \"Redirect\");\r\n        if (iErr > 0) {\r\n            OutString(\"Redirect: Set server address. iErr=\" + iErr);\r\n            return;\r\n        }\r\n        sSvrAddr = self.m_sSvrAddr = sSvrAddr;\r\n    }\r\n\r\n    OutString(\"Redirect: sSvrName=\" + sSvrName + \", sSvrAddr=\" + sSvrAddr);\r\n\r\n    self.timerStartRelogin(1);\r\n};\r\n\r\npgLibNode.prototype.NodeRedirectReset = function(uDelay) {\r\n    var self = this;\r\n    var sInitSvrName = this.initSvrName;\r\n    var sInitSvrAddr = this.initSvrAddr;\r\n    var sSvrAddr = this.m_sSvrAddr;\r\n    if (sSvrAddr != sInitSvrAddr) {\r\n        var sRedirect = \"(SvrName){\" + sInitSvrName + \"}(SvrAddr){\" + sInitSvrAddr + \"}\";\r\n        self._NodeRedirect(sRedirect);\r\n    } else {\r\n        if (uDelay != 0) {\r\n            self._NodeRelogin(uDelay);\r\n        }\r\n    }\r\n};\r\n\r\n//服务器消息处理\r\npgLibNode.prototype.onServerMessage = function(sData, sObjPeer) {\r\n    var self = this;\r\n\r\n    var sCmd = \"\";\r\n    var sParam = \"\";\r\n    var iInd = sData.indexOf(\"?\");\r\n    if (iInd > 0) {\r\n        sCmd = sData.substring(0, iInd);\r\n        sParam = sData.substring(iInd + 1);\r\n    } else {\r\n        sParam = sData;\r\n    }\r\n\r\n    if (sCmd == \"UserExtend\") {\r\n        var sPeer = self.ObjPeerParsePeer(sObjPeer);\r\n        self.EventProc(\"SvrNotify\", sParam, sPeer);\r\n    } else if (sCmd == \"Restart\") {\r\n        if (sParam.indexOf(\"redirect=1\") >= 0) {\r\n            self.NodeRedirectReset(3);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\npgLibNode.prototype.onServerKickOut = function(sData) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n\r\n    var sParam = Node.omlGetContent(sData, \"Param\");\r\n    self.EventProc(\"KickOut\", sParam, \"\");\r\n};\r\n\r\n//服务器错误处理\r\npgLibNode.prototype.onServerError = function(sData) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n    var sUser = this.m_sUser;\r\n\r\n    var sMeth = Node.omlGetContent(sData, \"Meth\");\r\n    if (sMeth != \"32\") {\r\n        return;\r\n    }\r\n\r\n    var sError = Node.omlGetContent(sData, \"Error\");\r\n    if (sError == \"0\") {\r\n        return;\r\n    }\r\n\r\n    if (sError == \"8\") {\r\n        var iReloginDelay;\r\n        var sObjTemp = \"_TMP_\" + sUser;\r\n        if (sObjTemp != \"\") {\r\n            //this.m_Self.sObjSelf = sObjTemp;\r\n            OutString(\"NodeLoginReply: Change to templete user, sObjTemp=\" + sObjTemp);\r\n            iReloginDelay = 1;\r\n        } else {\r\n            iReloginDelay = 30;\r\n        }\r\n\r\n        self.NodeLogout();\r\n        self.timerStartRelogin(iReloginDelay);\r\n    }\r\n};\r\n\r\npgLibNode.prototype.onServerRelogin = function(sData) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var sObjSvrName = this.m_sObjSvrName;\r\n\r\n    var sError = Node.omlGetContent(sData, \"ErrCode\");\r\n    if (sError == \"0\") {\r\n        var sParam = Node.omlGetContent(sData, \"Param\");\r\n        var sRedirect = Node.omlGetEle(sParam, \"Redirect.\", 10, 0);\r\n        if (sRedirect != \"\") {\r\n            self.NodeRedirect(sRedirect);\r\n            return;\r\n        }\r\n\r\n        self.bLogined = true;\r\n        self.EventProc(\"Login\", \"0\", sObjSvrName);\r\n    }\r\n};\r\n\r\npgLibNode.prototype.onNodeLoginReply = function(iErr, sData) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    OutString(\"pgLibNode NodeLoginReply begin\");\r\n    if (Node == null) {\r\n        return 1;\r\n    }\r\n\r\n    if (iErr != 0) {\r\n        OutString(\"pgLibNode NodeLoginReply: Login failed. iErr=\" + iErr);\r\n\r\n        self.EventProc(\"Login\", (\"\" + iErr), \"\");\r\n        if (iErr == 11 || iErr == 12 || iErr == 14) {\r\n            self._NodeRedirectReset(10);\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    var sParam = Node.omlGetContent(sData, \"Param\");\r\n    var sRedirect = Node.omlGetEle(sParam, \"Redirect.\", 10, 0);\r\n    if (sRedirect) {\r\n        self._NodeRedirect(sRedirect);\r\n        return 1;\r\n    }\r\n\r\n    self.m_bLogin = true;\r\n    self.EventProc(\"Login\", \"0\", \"\");\r\n\r\n    return 1;\r\n};\r\n\r\npgLibNode.prototype.timerStartPeerGetInfo = function(sObjPeer, uDelay) {\r\n    var self = this;\r\n    setTimeout(function(self, sObjPeer) {\r\n        self.NodePeerGetInfo(sObjPeer);\r\n    }, uDelay * 1000, self, sObjPeer);\r\n};\r\n\r\npgLibNode.prototype.NodePeerGetInfo = function(sObjPeer) {\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    var iErr = Node.ObjectRequest(sObjPeer, 38, \"\", \"PeerGetInfo\");\r\n    if (iErr > PG_ERR_Normal) {\r\n        OutString(\"pgLibNode._NodePeerGetInfo: iErr=\" + iErr);\r\n    }\r\n};\r\n\r\npgLibNode.prototype.onPeerGetInfoReply = function(sObj, iErr, sData) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var sObjSvr = this.m_sObjSvrName;\r\n    var OutString = this.OutString;\r\n    if (iErr != PG_ERR_Normal) {\r\n        return;\r\n    }\r\n\r\n    var sPeer = self.ObjPeerParsePeer(sObj);\r\n\r\n    var sThrough = Node.omlGetContent(sData, \"Through\");\r\n    var sProxy = _AddrToReadable(Node.omlGetContent(sData, \"Proxy\"));\r\n    var sAddrLcl = _AddrToReadable(Node.omlGetContent(sData, \"AddrLcl\"));\r\n    var sAddrRmt = _AddrToReadable(Node.omlGetContent(sData, \"AddrRmt\"));\r\n    var sTunnelLcl = _AddrToReadable(Node.omlGetContent(sData, \"TunnelLcl\"));\r\n    var sTunnelRmt = _AddrToReadable(Node.omlGetContent(sData, \"TunnelRmt\"));\r\n    var sPrivateRmt = _AddrToReadable(Node.omlGetContent(sData, \"PrivateRmt\"));\r\n\r\n    var sDataInfo = \"16:(\" + Node.omlEncode(sObj) + \"){(Through){\" + sThrough + \"}(Proxy){\" +\r\n        Node.omlEncode(sProxy) + \"}(AddrLcl){\" + Node.omlEncode(sAddrLcl) + \"}(AddrRmt){\" +\r\n        Node.omlEncode(sAddrRmt) + \"}(TunnelLcl){\" + Node.omlEncode(sTunnelLcl) + \"}(TunnelRmt){\" +\r\n        Node.omlEncode(sTunnelRmt) + \"}(PrivateRmt){\" + Node.omlEncode(sPrivateRmt) + \"}}\";\r\n\r\n    var iErrTemp = Node.ObjectRequest(sObjSvr, 35, sDataInfo, \"pgLibNode.ReportPeerInfo\");\r\n    if (iErrTemp > PG_ERR_Normal) {\r\n        OutString(\"_OnPeerGetInfoReply: iErr=\" + iErrTemp);\r\n    }\r\n\r\n    // Report to app.\r\n    sDataInfo = \"peer=\" + sPeer + \"&through=\" + sThrough + \"&proxy=\" + sProxy +\r\n        \"&addrlcl=\" + sAddrLcl + \"&addrrmt=\" + sAddrRmt + \"&tunnellcl=\" + sTunnelLcl +\r\n        \"&tunnelrmt=\" + sTunnelRmt + \"&privatermt=\" + sPrivateRmt;\r\n    self.EventProc(\"PeerInfo\", sDataInfo, sPeer);\r\n};\r\n\r\npgLibNode.prototype.onSvrReply = function(iErr, sData) {\r\n    if (iErr != 0) {\r\n        self.EventProc(\"SvrReplyError\", iErr + \"\", \"\");\r\n    } else {\r\n        self.EventProc(\"SvrReply\", sData, \"\");\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n *  描述：给指定节点发送消息\r\n *  阻塞方式：非阻塞，立即返回\r\n *  sMsg：[IN] 消息内容\r\n *  sPeer：[IN]节点名称\r\n *  返回值： true 操作成功，false 操作失败\r\n * @return {boolean}\r\n */\r\npgLibNode.prototype.MessageSend = function(sData, sObjPeer) {\r\n    // var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    if (Node == null) {\r\n        OutString(\"pgLibNode.MessageSend: Not initialize\");\r\n        return false;\r\n    }\r\n\r\n    var sMsg = \"Msg?\" + sData;\r\n\r\n    var iErr = Node.ObjectRequest(sObjPeer, 36, sMsg, \"pgLibNode.MessageSend\");\r\n    if (iErr > 0) {\r\n        OutString(\"pgLibNode.MessageSend Err=\" + iErr);\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n *  描述：给指定节点发送消息\r\n *  阻塞方式：非阻塞，立即返回\r\n *  sMsg：[IN] 消息内容\r\n *  sPeer：[IN]节点名称\r\n *  返回值： true 操作成功，false 操作失败\r\n * @return {boolean}\r\n */\r\npgLibNode.prototype.CallSend = function(sMsg, sObjPeer, sSession) {\r\n    // var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    if (Node == null) {\r\n        OutString(\"pgLibNode.CallSend: Not initialize\");\r\n        return false;\r\n    }\r\n\r\n    var sData = \"Msg?\" + sMsg;\r\n    var iErr = Node.ObjectRequest(sObjPeer, 35, sData, \"pgLibNode.CallSend:\" + sSession);\r\n    if (iErr > 0) {\r\n        OutString(\"pgLibNode.CallSend: iErr=\" + iErr);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\npgLibNode.prototype.onCallSendReply = function(sObj, iErr, sData, sParam) {\r\n    var self = this;\r\n\r\n    var sSession = \"\";\r\n    var iInd = sParam.indexOf(\":\");\r\n    if (iInd > 0) {\r\n        sSession = sData.substring(iInd);\r\n    }\r\n    var sPeer = self.ObjPeerParsePeer(sObj);\r\n    self.EventProc(\"CallSend\", sSession + \":\" + iErr, sPeer);\r\n    return 1;\r\n};\r\nthis._SelfSync = function(sData, sObjPeer) {\r\n    var sAct = this.m_Node.omlGetContent(sData, \"Action\");\r\n    if (sAct == \"1\") {\r\n        if (sObjPeer == this.m_sObjSvr) {\r\n            this._TimerStart(\"(Act){PeerGetInfo}(Peer){\" + sObjPeer + \"}\", 5, false);\r\n        }\r\n    } else {\r\n        if (sObjPeer == this.m_sObjSvr) {\r\n            this._NodeRelogin(10);\r\n        }\r\n    }\r\n};\r\n/**\r\n * @return {number}\r\n */\r\nthis._SelfCall = function(sData, sObjPeer, iHandle) {\r\n    this.OutString(\"->SelfCall\");\r\n\r\n    var sCmd = \"\";\r\n    var sParam = \"\";\r\n    var iInd = sData.indexOf(\"?\");\r\n    if (iInd > 0) {\r\n        sCmd = sData.substring(0, iInd);\r\n        sParam = sData.substring(iInd + 1);\r\n    } else {\r\n        sParam = sData;\r\n    }\r\n    if (sCmd == \"Msg\") {\r\n        var sPeer = this._ObjPeerParsePeer(sObjPeer);\r\n        this.EventProc(\"Message\", sParam, sPeer);\r\n    }\r\n    this.m_Node.ObjectExtReply(sObjPeer, 0, \"\", iHandle);\r\n\r\n    return 1;\r\n};\r\n\r\n\r\nthis._SelfMessage = function(sData, sObjPeer) {\r\n    var sPeer = this._ObjPeerParsePeer(sObjPeer);\r\n    var sCmd = \"\";\r\n    var sParam = \"\";\r\n    var iInd = sData.indexOf(\"?\");\r\n    if (iInd > 0) {\r\n        sCmd = sData.substring(0, iInd);\r\n        sParam = sData.substring(iInd + 1);\r\n    } else {\r\n        sParam = sData;\r\n    }\r\n\r\n    if (sCmd == \"Join\") {\r\n        return this.EventProc(\"AskJoin\", \"\", sPeer);\r\n    } else if (sCmd == \"Leave\") {\r\n        return this.EventProc(\"AskLeave\", \"\", sPeer);\r\n    } else if (sCmd == \"Msg\") {\r\n        return this.EventProc(\"Message\", sParam, sPeer);\r\n    } else if (sCmd == \"Active\") {\r\n\r\n        return 0;\r\n    } else if (sCmd == \"Keep\") {\r\n        this._KeepRecv(sObjPeer);\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\n/**\r\n *  描述：给服务器发送消息。\r\n *  阻塞方式：非阻塞，立即返回\r\n *  返回值： true 操作成功，false 操作失败\r\n * @return {boolean}\r\n */\r\npgLibNode.prototype.SvrRequest = function(sData) {\r\n    // var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n    var sSvrName = this.m_sObjSvrName;\r\n\r\n    if (Node == null) {\r\n        OutString(\"pgLibNode.SvrRequest: Not initialize\");\r\n        return false;\r\n    }\r\n\r\n    var iErr = Node.ObjectRequest(sSvrName, 35, (\"1024:\" + sData), \"pgLibNode.SvrRequest\");\r\n    if (iErr > 0) {\r\n        OutString(\"pgLibNode.SvrRequest: iErr=\" + iErr);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * @returns {String} 版本号\r\n */\r\npgLibNode.prototype.Version = function() {\r\n    var Node = this.Node;\r\n    var ver = this.LIB_VER\r\n    var sVersion = \"\";\r\n    var sVerTemp = Node.omlGetContent(Node.utilCmd(\"Version\", \"\"), \"Version\");\r\n    if (sVerTemp.length > 1) {\r\n        sVersion = sVerTemp.substring(1);\r\n    }\r\n\r\n    return sVersion + \".\" + ver;\r\n};\r\n\r\npgLibNode.prototype.PeerAdd = function(sObjPeer) {\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    if (Node.ObjectGetClass(sObjPeer) == \"PG_CLASS_Peer\") {\r\n        self._PeerSync(sObjPeer, \"\", 1);\r\n    } else {\r\n        if (!Node.ObjectAdd(sObjPeer, \"PG_CLASS_Peer\", \"\", (0x10000))) {\r\n            OutString(\"pgLibNode.PeerAdd: Add failed. sObjPeer = \" + sObjPeer);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\npgLibNode.prototype.PeerSync = function(sObject, sObjPeer, uAction) {\r\n    // var self = this;\r\n    var Node = this.Node;\r\n    var OutString = this.OutString;\r\n\r\n    OutString(\"pgLibNode.PeerSync Act=\" + uAction);\r\n    if (Node == null) {\r\n        return;\r\n    }\r\n    uAction = (uAction <= 0) ? 0 : 1;\r\n    Node.ObjectSync(sObject, sObjPeer, uAction);\r\n\r\n};\r\n\r\npgLibNode.prototype._PeerDel = function(sObjPeer) {\r\n    var Node = this.Node;\r\n    Node.ObjectDelete(sObjPeer);\r\n};\r\n\r\nthis._OnPeerSync = function(sObj, sData) {\r\n    var sAct = this.m_Node.omlGetContent(sData, \"Action\");\r\n    if (\"1\" == (sAct)) {\r\n        if (this.m_bReportPeerInfo) {\r\n            this._TimerStart(\"(Act){PeerGetInfo}(Peer){\" + sObj + \"}\", 5, false);\r\n        }\r\n        //心跳包列表 添加\r\n        if (!this.m_Group.bEmpty && this.m_Group.bChairman) {\r\n            this._KeepAdd(sObj);\r\n        }\r\n        this.EventProc(EVENT_PEER_SYNC, sAct, sObj);\r\n    }\r\n};\r\n\r\nthis._OnPeerError = function(sObj, sData) {\r\n    var self = this;\r\n    var sMeth = this.m_Node.omlGetContent(sData, \"Meth\");\r\n    var sError = this.m_Node.omlGetContent(sData, \"Error\");\r\n    if (\"34\" == (sMeth)) {\r\n        self._PeerOffline(sObj, sError);\r\n    }\r\n};\r\n\r\n\r\n\r\n//peer离线\r\nthis._PeerOffline = function(sObjPeer, sError) {\r\n    var sAct = EVENT_PEER_OFFLINE;\r\n    \r\n    var sPeer = this._ObjPeerParsePeer(sObjPeer);\r\n    this.EventProc(sAct, sError, sPeer);\r\n};\r\n\r\n\r\npgLibNode.prototype.OnExtRequestPeer = function(sObj, uMeth, sData, uHandle, sObjPeer) {\r\n    if (sObj == this.m_sObjSvr) {\r\n        if (uMeth == 0) {\r\n            var sAct = this.m_Node.omlGetContent(sData, \"Action\");\r\n            if (sAct != \"1\" && this.m_sObjSvr == \"\") {\r\n                this._NodeRelogin(10);\r\n            }\r\n        } else if (uMeth == 1) {\r\n            this._ServerError(sData);\r\n        } else if (uMeth == 46) {\r\n            this._ServerRelogin(sData);\r\n        }\r\n        return 0;\r\n    } else if (sObj == this.m_Self.sObjSelf) {\r\n        if (uMeth == 0) {\r\n            this._SelfSync(sData, sObjPeer);\r\n        } else if (uMeth == 35) {\r\n            this._SelfCall(sObj, sData, uHandle, sObjPeer);\r\n        } else if (uMeth == 36) {\r\n            if (sObjPeer == this.m_sObjSvr) {\r\n                return this._ServerMessage(sData, sObjPeer);\r\n            } else {\r\n                return this._SelfMessage(sData, sObjPeer);\r\n            }\r\n        } else if (uMeth == 47) {\r\n            //ID冲突 被踢下线了\r\n            if (sObjPeer == (this.m_sObjSvr)) {\r\n                this._OnServerKickOut(sData);\r\n            }\r\n        }\r\n        return 0;\r\n    } else if (sObj == this.m_Group.sObjChair) {\r\n        if (uMeth == 0) {\r\n            this._OnChairPeerSync(sObj, sData);\r\n        } else if (uMeth == 1) {\r\n            this._OnChairPeerError(sObj, sData);\r\n        }\r\n        return 0;\r\n    } else if (this.m_Node.ObjectGetClass(sObj) == \"PG_CLASS_Peer\") {\r\n        if (uMeth == 0) {\r\n            this._OnPeerSync(sObj, sData);\r\n        } else if (uMeth == 1) {\r\n            this._OnPeerError(sObj, sData);\r\n        }\r\n        return 0;\r\n    }\r\n};\r\n\r\npgLibNode.prototype.OnReplyPeer = function(sObj, iErr, sData, sParam) {\r\n    if (sParam == \"PeerGetInfo\") {\r\n        this._OnPeerGetInfoReply(sObj, iErr, sData);\r\n        return 1;\r\n    }\r\n\r\n    if (sObj == this.m_sObjSvr) {\r\n        if (sParam == \"NodeLogin\") {\r\n            return this._NodeLoginReply(iErr, sData);\r\n        } else if (sParam == \"SvrRequest\") {\r\n            this._SvrReply(iErr, sData);\r\n        }\r\n\r\n        return 1;\r\n    }\r\n};\n},{\"./pgLibConferenceConst\":5,\"./pgLibError\":6,\"./pgLibNode\":7}],2:[function(require,module,exports){\nfunction VideoPeer(sObjPeer,pNode) {\r\n    var self = this;\r\n    this.Node = pNode;\r\n\r\n    this.sObjPeer = sObjPeer;\r\n\r\n    //------------\r\n     \r\n    this.videoHeartbeatStamp = 0;\r\n    this.videoHeartbeatLost = false;\r\n\r\n    //------------\r\n    this.smallVideoDivView = \"\";\r\n    this.smallVideoWndEle = \"\"; \r\n\r\n    this.smallVideoRequestStamp = 0;\r\n    this.smallOnVideoJoinStamp = 0;\r\n    this.smallVideoRequestHandle = 0;\r\n    this.smallVideoMode = VIDEO_PEER_MODE_Leave;\r\n    //------------\r\n    \r\n    this.largeVideoDivView = \"\";\r\n    this.largeVideoWndEle = \"\"; \r\n\r\n    this.largeVideoRequestStamp = 0;\r\n    this.largeOnVideoJoinStamp = 0;\r\n    this.largeVideoRequestHandle = 0;\r\n    this.largeVideoMode = VIDEO_PEER_MODE_Leave;\r\n}\r\n\r\nVideoPeer.prototype.SetObjPeer = function (sObjPeer) {\r\n    var self = this;\r\n    self.sObjPeer = sObjPeer;\r\n};\r\nVideoPeer.prototype.getObjPeer = function () {\r\n    var self = this;\r\n    return self.sObjPeer;\r\n};\r\n\r\nVideoPeer.prototype.updataHeartBeatStamp = function(iStamp){\r\n    var self = this;\r\n    self.videoHeartbeatStamp = iStamp;\r\n    self.videoHeartbeatLost = false;\r\n};\r\nVideoPeer.prototype.checkHeartBeatLost = function (iStamp) {\r\n    var self = this;\r\n    if ((iStamp - self.videoHeartbeatStamp) > 30 && self.videoHeartbeatStamp != 0 && !self.videoHeartbeatLost) {\r\n        self.videoHeartbeatLost = true;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\r\n\r\n\r\nVideoPeer.prototype.smallVideoGetWndEle = function(sDivView){\r\n    // Create the node and view.专门用来显示视频的node\r\n    var self = this;\r\n    var Node = this.Node;\r\n    if(sDivView == \"\"){\r\n        return \"\";\r\n    }\r\n\r\n    if (self.smallVideoWndEle == \"\") {\r\n        self.smallVideoDivView = sDivView;\r\n        self.smallVideoWndEle = Node.WndCreate(sDivView);\r\n    }\r\n    return self.smallVideoWndEle;\r\n};\r\n\r\nVideoPeer.prototype.largeVideoGetWndEle = function(sDivView){\r\n    // Create the node and view.专门用来显示视频的node\r\n    var self = this;\r\n    var Node = this.Node;\r\n    if(sDivView == \"\"){\r\n        return \"\";\r\n    }\r\n\r\n    if (self.largeVideoWndEle == \"\") {\r\n        self.largeVideoDivView = sDivView;\r\n        self.largeVideoWndEle = Node.WndCreate(sDivView);\r\n    }\r\n    return self.smallVideoWndEle;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoJoin = function (iStamp){\r\n    var self = this;\r\n    self.smallVideoRequestStamp = iStamp;\r\n    self.smallVideoMode = VIDEO_PEER_MODE_Request;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoJoinCheck = function (iStamp) {\r\n    var self = this;\r\n    return self.smallVideoRequestStamp > 0 && iStamp - self.smallVideoRequestStamp > 60 ;\r\n};\r\n\r\nVideoPeer.prototype.smallOnVideoJoin = function(iHandle, iStamp){\r\n    var self = this;\r\n    self.smallOnVideoJoinStamp = iStamp;\r\n    self.smallVideoRequestHandle = iHandle;\r\n    self.smallVideoMode = VIDEO_PEER_MODE_Response;\r\n};\r\n\r\nVideoPeer.prototype.smallOnVideoJoinCheck = function (iStamp) {\r\n    var self = this;\r\n    return self.smallOnVideoJoinStamp > 0 && iStamp - self.smallOnVideoJoinStamp > 60 ;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoJoined = function (iStamp){\r\n    var self = this;\r\n    self.videoHeartbeatStamp = iStamp;\r\n    self.smallVideoRequestStamp = 0;\r\n    self.smallOnVideoJoinStamp = 0;\r\n    self.smallVideoRequestHandle = 0;\r\n    self.smallVideoMode = VIDEO_PEER_MODE_Join;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoLeave = function(){\r\n    var self = this;\r\n    var Node = this;\r\n    self.smallVideoRequestStamp = 0;\r\n    self.smallOnVideoJoinStamp = 0;\r\n    self.smallVideoRequestHandle = 0;\r\n    if (self.smallVideoDivView != \"\") {\r\n        Node.WndDestroy(self.smallVideoDivView);\r\n        self.smallVideoDivView = \"\";\r\n        self.smallVideoWndEle = \"\";\r\n    }\r\n    self.smallVideoMode = VIDEO_PEER_MODE_Leave;\r\n};\r\n\r\nVideoPeer.prototype.largeVideoJoin = function (iStamp){\r\n    var self = this;\r\n    self.largeVideoRequestStamp = iStamp;\r\n    self.largeVideoMode = VIDEO_PEER_MODE_Request;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoJoinCheck = function (iStamp) {\r\n    var self = this;\r\n    return self.smallVideoRequestStamp > 0 && iStamp - self.smallVideoRequestStamp > 60 ;\r\n};\r\n\r\nVideoPeer.prototype.largeOnVideoJoin = function(iHandle, iStamp){\r\n    var self = this;\r\n    self.largeOnVideoJoinStamp = iHandle;\r\n    self.largeVideoRequestHandle = iStamp;\r\n    self.largeVideoMode = VIDEO_PEER_MODE_Response;\r\n};\r\n\r\nVideoPeer.prototype.smallVideoJoinCheck = function (iStamp) {\r\n    var self = this;\r\n    return self.smallVideoRequestStamp > 0 && iStamp - self.smallVideoRequestStamp > 60 ;\r\n};\r\n\r\nVideoPeer.prototype.largeVideoJoined = function (iStamp){\r\n    var self = this;\r\n    self.videoHeartbeatStamp = iStamp;\r\n    self.largeVideoRequestStamp = 0;\r\n    self.largeOnVideoJoinStamp = 0;\r\n    self.largeVideoRequestHandle = 0;\r\n    self.largeVideoMode = VIDEO_PEER_MODE_Join;\r\n};\r\n\r\nVideoPeer.prototype.largeVideoLeave = function(){\r\n    var self = this;\r\n    var Node = this;\r\n    self.largeVideoRequestStamp = 0;\r\n    self.largeOnVideoJoinStamp = 0;\r\n    self.largeVideoRequestHandle = 0;\r\n    if (self.largeVideoDivView != \"\") {\r\n        Node.WndDestroy(self.largeVideoDivView);\r\n        self.largeVideoDivView = \"\";\r\n        self.largeVideoWndEle = \"\";\r\n    }\r\n    self.largeVideoMode = VIDEO_PEER_MODE_Leave;\r\n};\r\n\r\nVideoPeer.prototype.Release = function(){\r\n    var self = this;\r\n    self.smallVideoLeave();\r\n    self.largeVideoLeave();\r\n};\r\n\r\n\r\nmodule.exports = VideoPeer;\n},{}],3:[function(require,module,exports){\nvar Peer = require('./VideoPeer');\r\n\r\nfunction VideoPeerList(pNode) {\r\n    this.Node = pNode;\r\n    this.Peers = [];\r\n}\r\n\r\nVideoPeerList.prototype.Search = function(sObjPeer) {\r\n    var self = this;\r\n    if(typeof sObjPeer != \"string\"){\r\n        return {\r\n            Object : null,\r\n            Ind: -1\r\n        };\r\n    }\r\n    \r\n    for (var i = 0;i < self.Peers.length ;i++) {\r\n        if (self.Peers[i].sObjPeer == sObjPeer) {\r\n            return {\r\n                Object : self.Peers[i],\r\n                Ind: i\r\n            };\r\n        }\r\n        i++;\r\n    }\r\n    return {\r\n        Object : null,\r\n        Ind: -1\r\n    };\r\n};\r\n\r\nVideoPeerList.prototype.Add = function(sObjPeer){\r\n    var self = this;\r\n    var Node = this.Node;\r\n    var ret = self.Search(sObjPeer);\r\n    if(ret.Object != null){\r\n        return ret.Object;\r\n    }\r\n    var oPeer = new Peer(sObjPeer,Node);\r\n    self.Peers.push(oPeer);\r\n    return oPeer;\r\n};\r\n\r\nVideoPeerList.prototype.DeleteAt = function(index ){\r\n    if(index < 0 || index > this.Peers.length - 1) {\r\n        return;\r\n    }\r\n\r\n    \r\n};\r\n\r\nVideoPeerList.prototype.Delete = function(sObjPeer){\r\n    var self = this;\r\n    var ret = self.Search(sObjPeer);\r\n    if(ret.Ind > -1){\r\n        self.Peers.splice(ret.Ind, 1);\r\n    }\r\n    \r\n};\r\n\r\nVideoPeerList.prototype.Clean = function(){\r\n    var self = this;\r\n    var i = 0;\r\n    while (i < self.Peers.length ) {\r\n        self.Peers[i].Release();\r\n        i++;\r\n    }\r\n   \r\n    self.Peers = [];\r\n};\r\n\r\nVideoPeerList.prototype.Traversing = function(callback,args){\r\n    if(typeof callback != \"function\"){\r\n        return;\r\n    }\r\n    var self = this;\r\n    for (var i = 0; i < self.Peers.length; i++) {\r\n        callback(self.Peers[i],i,args);\r\n    }\r\n};\r\n\r\nmodule.exports = VideoPeerList;\n},{\"./VideoPeer\":2}],4:[function(require,module,exports){\n/*************************************************************************\r\n  copyright   : Copyright (C) 2014, chenbichao, All rights reserved.\r\n              : www.peergine.com, www.pptun.com\r\n              :\r\n  filename    : pgLibConference.js\r\n  discription : \r\n  modify      :\r\n\r\n*************************************************************************/\r\n/**\r\n * Updata 2017/02/014 v13\r\n * 继续优化心跳包。\r\n * 删除会议模块在离线事件和离开会议后的主动清理视频的代码。\r\n * 修复上报离线事件后再次连接上报同步消息。\r\n * 修复主席端对同一节点反复上报离线消息。\r\n * 修复反复上报VideoLost消息。\r\n * 修改PG_PEER 的列表添加位置，由加入会议添加，离开会议删除，改为视频打开或收到请求添加，视频关闭删除\r\n * 修改函数VideoOpen中对同一节点的Node和View，由新建改为继承。\r\n * 修改Keep函数中的列表的遍历方式。\r\n * 修改ServiceStart的执行位置，使得可以在SDK Initialze 后可以在之后任意位置VideoStart 和AudioStart\r\n * 函数执行打印信息\r\n *\r\n * 开放定时器\r\n *    相关接口TimerOut\r\n *  相关函数：\r\n *    TimerOutAdd  把接口TimerOut的实现加入定时器处理\r\n *    TimerOutDel  把接口TimerOut的实现从定时器处理中删除\r\n *    TimerStart  开始一个定时器处理\r\n *    TimerStop  对定时时间长或者循环定时进行停止操作\r\n *\r\n * */\r\n\r\nvar pgLibNode = require(\"./ConferencePeer\");\r\nvar pgLibConferenceEvent = require(\"./pgLibConferenceConst\");\r\nvar VideoPeerList = require(\"./VideoPeerList\").default;\r\n\r\nvar ID_PREFIX = \"_DEV_\";\r\nvar LIB_VER = \"25\";\r\n\r\n\r\nfunction PG_LANSCAN() {\r\n\tthis.bApiLanScan = false;\r\n\tthis.sLanScanRes = \"\";\r\n\tthis.sLanAddr = \"\";\r\n\tthis.bPeerCheckTimer = false;\r\n}\r\n\r\n\r\nfunction pgLibConference(Node, OnEventListener) {\r\n\t// Check peergine Activex object\r\n\tif (!Node || typeof (Node.Control) == \"undefined\") {\r\n\t\talert(\"pgLibConference: oAtx is invalid.\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Check callback object.\r\n\tif (!OnEventListener || typeof (OnEventListener.OnEvent) != \"function\") {\r\n\t\talert(\"pgLibConference: OnEventListener is invalid.\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\tthis.LIB_VER = LIB_VER;\r\n\r\n\tthis.bInitialized = false;\r\n\tthis.bLogined = false;\r\n\tthis.bEventEnable = true;\r\n\r\n\t\r\n\tthis.m_Self = new PG_SELF();\r\n\r\n\tthis.m_InitGroup = new PG_GROUP();\r\n\tthis.m_Group = new PG_GROUP();\r\n\tthis.m_Status = new PG_STATUS();\r\n\tthis.m_Stamp = new PG_STAMP();\r\n\tthis.m_LanScan = new PG_LANSCAN();\r\n\r\n\r\n\t// Store ActiveX object and UI callback object.\r\n\tthis.m_Node = Node;\r\n\tthis.mEventProcListener = OnEventListener;\r\n\r\n   \r\n\r\n\t// Status members.\r\n\tthis.m_sObjSvr = \"\";\r\n\tthis.m_sSvrAddr = \"\";\r\n\tthis.m_sRelayAddr = \"\";\r\n\t\r\n\tthis.m_listVideoPeer = [];\r\n\r\n\t\r\n\r\n\t///------------------------------------------------------------------------------\r\n\t// API methods.\r\n\r\n\r\n\t/**\r\n     * 开始预览\r\n     * @param {String} sParam 打开视频参数，如\"(Code){0}(Mode){3}(Rate)(66)\"    \r\n     * @param {String} sDivPrew 显示预览的div ID名称\r\n     */\r\n\tthis.PreviewStart = function (sParam, sDivPrew) {\r\n\t\treturn PG_ERR_Normal;\r\n\t};\r\n\r\n\t/**\r\n     * 停止预览\r\n     * @param {String} sDivPrew divID 名称\r\n     */\r\n\tthis.PreviewStop = function (sDivPrew) {\r\n\t\t\r\n\t};\r\n\t/**\r\n     *  描述：初始化视频设置\r\n     *  iFlag:参考1）成员定义：\r\n     *  阻塞方式：非阻塞，立即返回\r\n     *   返回值： true 操作成功，false 操作失败\r\n     * @return {boolean}\r\n     */\r\n\r\n\tthis.VideoStart = function (iFlag) {\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n     *  描述：停止播放和采集视频\r\n     *  阻塞方式：非阻塞，立即返回\r\n     * @return {boolean}\r\n     */\r\n\tthis.VideoStop = function () {\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n     *  描述：打开某一成员的视频或接受某一成员视频请求\r\n     *  阻塞方式：非阻塞，立即返回\r\n     * @param {String}  sPeer:成员节点名\r\n     * @param {String}  sDivView div ID 数据\r\n     * @returns {boolean}  true 操作成功，false 操作失败\r\n     */\r\n\tthis.VideoOpen = function (sPeer, sDivView) {\r\n\t\treturn this._VideoOpen(sPeer, sDivView, false);\r\n\t};\r\n\r\n\t/**\r\n     *  描述：打开某一成员的视频\r\n     * @param {String}  sPeer:成员节点名\r\n     * @param {String}  sDivView div ID 数据\r\n     * @returns {boolean}  true 操作成功，false 操作失败\r\n     */\r\n\tthis.VideoOpenL = function (sPeer, sDivView) {\r\n\t\treturn this._VideoOpen(sPeer, sDivView, true);\r\n\t};\r\n\r\n\t/**\r\n *  描述：关闭某一成员视频\r\n *  阻塞方式：非阻塞，立即返回\r\n * @return {boolean}\r\n */\r\nthis.VideoClose = function (sPeer) {\r\n\r\n    if (this.m_Node == null) {\r\n        this.OutString(\"pgLibConference.SvrRequest: Not initialize\");\r\n        return;\r\n    }\r\n    if (!this.m_Status.bServiceStart) {\r\n        this.OutString(\"not join \");\r\n        return false;\r\n    }\r\n    if (!this.m_Status.bApiVideoStart) {\r\n        this.OutString(\"VideoClose: Service no start!\");\r\n        return false;\r\n    }\r\n    var sObjPeer = this._ObjPeerBuild(sPeer);\r\n\r\n    var sObjV = \"\";\r\n    var oPeer = _VideoPeerSearch(sObjPeer);\r\n    this._VideoClose(oPeer);\r\n    this.OutString(\"VideoClose: success\");\r\n    return true;\r\n};\r\n\r\n\tthis.OutString = function (sStr) {\r\n\t\tif (this.mEventProcListener.OnOutString && typeof (this.mEventProcListener.OnOutString) == \"function\") {\r\n\t\t\tthis.mEventProcListener.OnOutString(\"pgLibConference->\" + sStr);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n     * @return {number}\r\n     */\r\n\tthis.ParseInt = function (sInt, iDef) {\r\n\t\tvar iRet = Number(iDef);\r\n\t\ttry {\r\n\t\t\tiRet = Number(sInt);\r\n\t\t} catch (e) {\r\n\t\t\tiRet = Number(iDef);\r\n\t\t}\r\n\t\treturn iRet;\r\n\t};\r\n\t///---------------------------------------------------------------------------------\r\n\t// PRIVATE_CONST methods.\r\n\tthis.EventProc = function (sAct, sData, sPeer) {\r\n\t\tif (this.mEventProcListener.OnEvent && typeof (this.mEventProcListener.OnEvent) == \"function\" && this.m_Status.bEventEnable == true) {\r\n\t\t\tthis.mEventProcListener.OnEvent(sAct, sData, sPeer);\r\n\t\t}\r\n\t};\r\n\r\n\tthis._OnTimeout = function (sExec) {\r\n\t\tvar sAct = this.m_Node.omlGetContent(sExec, \"Act\");\r\n\t\tif (sAct == \"ChairmanAdd\") {\r\n\t\t\tthis._ChairmanAdd();\r\n\t\t} else if (\"ChairPeerCheck\" == (sAct)) {\r\n\t\t\tthis._ChairPeerCheckTimeout();\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\tthis.IsDevice = function(sObjPeer) {\r\n\t\treturn sObjPeer.indexOf(ID_PREFIX) == 0;\r\n\t};\r\n\r\n\tthis._ObjPeerBuild = function (sPeer) {\r\n\t\tif (sPeer.indexOf(ID_PREFIX) != 0) {\r\n\t\t\treturn ID_PREFIX + sPeer;\r\n\t\t}\r\n\t\treturn sPeer;\r\n\t};\r\n\r\n\tthis._ObjPeerParsePeer = function (sObjPeer) {\r\n\t\tvar ind = sObjPeer.indexOf(ID_PREFIX);\r\n\t\tif (ind == 0) {\r\n\t\t\treturn sObjPeer.substring(5);\r\n\t\t}\r\n\t\treturn sObjPeer;\r\n\t};\r\n\r\n\r\n\t///------------------------------------------------------------------------\r\n\t// Callback process functions.\r\n\r\n\r\n\r\n\t\r\n\r\n\t///------------------------------------------------------------------------\r\n\t// Node callback functions.\r\n\r\n\tthis._OnExtRequest = function (sObj, uMeth, sData, uHandle, sObjPeer) {\r\n\t\tvar self = this;\r\n\t\tvar OutString = this.OutString;\r\n\t\tvar Node = this.m_Node;\r\n\r\n\t\tOutString(\"NodeOnExtRequest :\" + sObj + \", \" + uMeth + \", \" + sData + \", \" + sObjPeer);\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Peer\"){\r\n\t\t\treturn ;//pgLibNodePeer\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Group\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Data\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Video\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Audio\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\tthis._OnReply = function (sObj, iErr, sData, sParam) {\r\n\t\tvar self = this;\r\n\t\tvar OutString = this.OutString;\r\n\t\tvar Node = this.m_Node;\r\n\r\n\t\tOutString(\"->OnReply\" + sObj + \", \" + iErr + \", \" + sData + \", \" + sParam);\r\n\r\n\t\t// OnReplyPeer\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Peer\"){\r\n\t\t\treturn ;//pgLibNodePeer\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Group\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Data\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Video\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(Node.ObjectGetClass(sObj) == \"PG_CLASS_Audio\"){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\treturn 1;\r\n\t};\r\n}\r\n\r\n//  sConfig_Node 参数示例：\"Type=0;Option=1;MaxPeer=256;MaxGroup=32;MaxObject=512;MaxMCast=512;MaxHandle=256;SKTBufSize0=128;SKTBufSize1=64;SKTBufSize2=256;SKTBufSize3=64\";\r\npgLibConference.prototype.ConfigControl = function (m_sConfig_Control) {\r\n\tthis.m_sConfig_Control = m_sConfig_Control;\r\n\treturn true;\r\n};\r\n\t\r\npgLibConference.prototype.ConfigNode = function (mNodeCfg) {\r\n\tif (mNodeCfg == null) {\r\n\t\treturn false;\r\n\t}\r\n\tthis.m_sConfig_Node = \"Type=\" + mNodeCfg.Type +\r\n\t\t\";Option=\" + mNodeCfg.Option +\r\n\t\t\";MaxPeer=\" + mNodeCfg.MaxPeer +\r\n\t\t\";MaxGroup=\" + mNodeCfg.MaxGroup +\r\n\t\t\";MaxObject=\" + mNodeCfg.MaxObject +\r\n\t\t\";MaxMCast=\" + mNodeCfg.MaxMCast +\r\n\t\t\";MaxHandle=\" + mNodeCfg.MaxHandle +\r\n\t\t\";SKTBufSize0=\" + mNodeCfg.SKTBufSize0 +\r\n\t\t\";SKTBufSize1=\" + mNodeCfg.SKTBufSize1 +\r\n\t\t\";SKTBufSize2=\" + mNodeCfg.SKTBufSize2 +\r\n\t\t\";SKTBufSize3=\" + mNodeCfg.SKTBufSize3 +\r\n\t\t\";P2PTryTime=\" + mNodeCfg.P2PTryTime;\r\n\treturn true;\r\n};\r\n\t\r\n/**\r\n * 描述：获取自身的P2P节点名\r\n * 阻塞方式：非阻塞，立即返回。\r\n * 返回值：自身的P2P节点名\r\n * 作用：扩展时利用此类，进行底层操作。\r\n */\r\npgLibConference.prototype.GetNode = function () {\r\n\treturn this.m_Node;\r\n};\r\n\t\r\n/**\r\n *  描述：获取自身的P2P节点名\r\n *  阻塞方式：非阻塞，立即返回。\r\n *  返回值：自身的P2P节点名\r\n * @return {string}\r\n */\r\npgLibConference.prototype.GetSelfPeer = function () {\r\n\treturn this.m_Self.sObjSelf;\r\n};\r\n\t\r\n/**\r\n *  描述：P2P会议对象初始化函数\r\n *  阻塞方式：非阻塞，立即返回。\r\n *  sName：[IN] 会议名称\r\n *  sChair：[IN] 主席端设备ID\r\n *  sUser：[IN] 登录用户名，自身的设备ID\r\n *  sPass：[IN] 登录密码\r\n *  sSvrAddr：[IN] 登录服务器地址和端口，格式：x.x.x.x:x\r\n *  sRelayAddr：[IN] 转发服务器地址和端口，格式：x.x.x.x:x。\r\n *                 如果传入空字符串，则使用登录服务器的IP地址加上443端口构成转发服务器地址。\r\n *  sVideoParam：[IN] 视频参数，格式为：(Code){3}(Mode){2}(Rate){40}(LCode){3}(LMode){2}\r\n *                 (LRate){40}(CameraNo){0}(Portrait){1}(BitRate){400}\r\n *                 Code: 视频压缩编码类型：1为MJPEG、2为VP8、3为H264。\r\n *                 Mode: 视频图像的分辨率（尺寸），请参考《Peergine编程手册》\r\n *                        0: 80x60, 1: 160x120, 2: 320x240, 3: 640x480,\r\n *                        4: 800x600, 5: 1024x768, 6: 176x144, 7: 352x288,\r\n *                        8: 704x576, 9: 854x480, 10: 1280x720, 11: 1920x1080\r\n *                 Rate: 视频的帧间间隔（毫秒）。例如40毫秒的帧率为：1000/40 = 25 fps\r\n *                 LCode: 视频压缩编码类型：1为MJPEG、2为VP8、3为H264。\r\n *                 LMode: 视频图像的分辨率（尺寸），请参考《Peergine编程手册》\r\n *                        0: 80x60, 1: 160x120, 2: 320x240, 3: 640x480,\r\n *                        4: 800x600, 5: 1024x768, 6: 176x144, 7: 352x288,\r\n *                        8: 704x576, 9: 854x480, 10: 1280x720, 11: 1920x1080\r\n *                 LRate: 视频的帧间间隔（毫秒）。例如40毫秒的帧率为：1000/40 = 25 fps\r\n *                 CameraNo: 摄像头编号，CameraInfo.facing的值。\r\n *                 Portrait: 采集图像的方向。0为横屏，1为竖屏。\r\n *                 Rotate: 采集图像的角度。（Portrait为0时生效）\r\n *                 BitRate: 视频压缩后的码率。单位为 Kbps\r\n *  返回值：true 成功 ， false 失败\r\n * @return {boolean}\r\n */\r\npgLibConference.prototype.Initialize1 = function (sUser, sPass, sSvrAddr, sRelayAddr, sVideoParam) {\r\n\treturn this.Initialize(\"\", \"\", sUser, sPass, sSvrAddr, sRelayAddr, sVideoParam);\r\n};\r\npgLibConference.prototype.Initialize = function (sName, sChair, sUser, sPass, sSvrAddr, sRelayAddr, sVideoParam) {\r\n\r\n\tif (!this.m_Status.bInitialized) {\r\n\t\tif (sName != \"\" && sName.length < 100) {\r\n\t\t\t// Check video parameters.\r\n\t\t\tif (sVideoParam == \"\") {\r\n\t\t\t\tthis.OutString(\"video parameter error\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create Timer message handler.\r\n\r\n\t\t\t// Init status\r\n\t\t\tthis.m_Self.Init(sUser, sPass, sVideoParam, this.m_Node);\r\n\t\t\tthis.sObjChair = ID_PREFIX + sChair;\r\n\t\t\tthis.sObjG = \"_G_\" + sName;\r\n\t\t\tthis.sObjD = \"_D_\" + sName;\r\n\t\t\tthis.sObjV = \"_V_\" + sName;\r\n\t\t\tthis.sObjLV = \"_LV_\" + sName;\r\n\t\t\tthis.sObjA = \"_A_\" + sName;\r\n\t\t\tthis.m_sInitSvrName = \"pgConnectSvr\";\r\n\t\t\tthis.m_sInitSvrAddr = sSvrAddr;\r\n\t\t\tthis.m_sRelayAddr = sRelayAddr;\r\n\r\n\t\t\tthis.m_InitGroup.Init(sName, sChair, sUser);\r\n\r\n\t\t\tthis.m_listSyncPeer = [];\r\n\t\t\tthis.m_listVideoPeer = [];\r\n\r\n\t\t\tif (!this._NodeStart(\"\")) {\r\n\t\t\t\tthis.OutString(\"Initialize: Node start failed.\");\r\n\t\t\t\tthis.Clean();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.m_Status.bInitialized = true;\r\n\t\t\tif (!this.m_InitGroup.bEmpty) {\r\n\t\t\t\tthis.m_Group.Init(sName, sChair, this.m_Self.sUser);\r\n\t\t\t\tthis.m_Stamp.restore();\r\n\t\t\t\tthis._ServiceStart();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t} else {\r\n\t\tthis.OutString(\"->Initialize :Initialized = true\");\r\n\t}\r\n\tthis.m_Status.bInitialized = true;\r\n\treturn true;\r\n};\r\n\t\r\n\t\t/**\r\n\t\t *  描述：P2P会议对象清理函数\r\n\t\t *  阻塞方式：非阻塞，立即返回。\r\n\t\t */\r\n\t\tthis.Clean = function () {\r\n\t\r\n\t\t\tthis._NodeStop();\r\n\t\t\tthis.m_Status.restore();\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * 描述：通过节点名与其他节点建立联系 （节点名在我们P2P网络的功能类似英特网的IP地址）\r\n\t\t * @param {String} sPeer: 对端的节点名（用户名）\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tthis.PeerAdd = function (sPeer) {\r\n\t\t\tif (this.m_Node != null) {\r\n\t\t\t\tif (sPeer == \"\") {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar sObjPeer = this._ObjPeerBuild(sPeer);\r\n\t\r\n\t\t\t\tvar sClass = this.m_Node.ObjectGetClass(sObjPeer);\r\n\t\t\t\tif (sClass == \"PG_CLASS_Peer\") {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (sClass != \"\") {\r\n\t\t\t\t\tthis.m_Node.ObjectDelete(sObjPeer);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this.m_Node.ObjectAdd(sObjPeer, \"PG_CLASS_Peer\", \"\", 0x10000);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/** Sdk扩展运用之添加通信节点，  使用之后会产生PeerSync事件\r\n\t\t * 删除节点连接。（一般不用主动删除节点，因为如果没有通信，节点连接会自动老化。）\r\n\t\t * @param {String} sPeer: 对端的节点名（用户名）\r\n\t\t */\r\n\t\tthis.PeerDelete = function (sPeer) {\r\n\t\t\tif (this.m_Node == null) {\r\n\t\t\t\tif (sPeer != \"\") {\r\n\t\t\t\t\tvar sObjPeer = this._ObjPeerBuild(sPeer);\r\n\t\r\n\t\t\t\t\tthis.m_Node.ObjectDelete(sObjPeer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\nmodule.exports = pgLibConference;\n},{\"./ConferencePeer\":1,\"./VideoPeerList\":3,\"./pgLibConferenceConst\":5}],5:[function(require,module,exports){\n(function (global){\nglobal.EVENT_LOGIN = \"Login\";\r\nglobal.EVENT_LOGOUT = \"Logout\";\r\n\r\nglobal.EVENT_CHAIRMAN_SYNC = \"ChairmanSync\";\r\nglobal.EVENT_CHAIRMAN_OFFLINE = \"ChairmanOffline\";\r\nglobal.EVENT_PEER_SYNC = \"PeerSync\";\r\nglobal.EVENT_PEER_OFFLINE = \"PeerOffline\";\r\n\r\nglobal.EVENT_ASK_JOIN = \"AskJoin\";\r\nglobal.EVENT_ASK_LEAVE = \"AskLeave\";\r\nglobal.EVENT_JOIN = \"Join\";\r\nglobal.EVENT_LEAVE = \"Leave\";\r\n\r\nglobal.EVENT_MESSAGE = \"Message\";\r\nglobal.EVENT_CALLSEND_RESULT = \"CallSend\";\r\nglobal.EVENT_NOTIFY = \"Notify\";\r\nglobal.EVENT_SVR_NOTIFY = \"SvrNotify\";\r\nglobal.EVENT_SVR_REPLYR_ERROR = \"SvrReplyError\";\r\nglobal.EVENT_SVR_RELAY = \"SvrReply\";\r\n\r\nglobal.EVENT_LAN_SCAN_RESULT = \"LanScanResult\";\r\n\r\nglobal.EVENT_AUDIO_SYNC = \"AudioSync\";\r\nglobal.EVENT_AUDIO_CTRL_VOLUME = \"AudioCtrlVolume\";\r\n\r\nglobal.EVENT_VIDEO_LOST = \"VideoLost\";\r\n\r\nglobal.EVENT_VIDEO_SYNC = \"VideoSync\";\r\nglobal.EVENT_VIDEO_OPEN = \"VideoOpen\";\r\nglobal.EVENT_VIDEO_JOIN = \"VideoJoin\";\r\nglobal.EVENT_VIDEO_CLOSE = \"VideoClose\";\r\nglobal.EVENT_VIDEO_FRAME_STAT = \"VideoFrameStat\";\r\nglobal.EVENT_VIDEO_CAMERA = \"VideoCamera\";\r\nglobal.EVENT_VIDEO_RECORD = \"VideoRecord\";\r\n\r\nglobal.EVENT_VIDEO_SYNC_1 = \"VideoSyncL\";\r\nglobal.EVENT_VIDEO_OPEN_1 = \"VideoOpenL\";\r\nglobal.EVENT_VIDEO_JOIN_1 = \"VideoJoinL\";\r\nglobal.EVENT_VIDEO_CLOSE_1 = \"VideoCloseL\";\r\nglobal.EVENT_VIDEO_FRAME_STAT_1 = \"VideoFrameStatL\";\r\nglobal.EVENT_VIDEO_CAMERA_1 = \"VideoCameraL\";\r\nglobal.EVENT_VIDEO_RECORD_1 = \"VideoRecordL\";\r\n\r\n\r\n/**\r\n * AudioStart 时的视频接收模式。\r\n */\r\nglobal.AUDIO_Speech = 0;\r\nglobal.AUDIO_NoSpeechSelf = 1;\r\nglobal.AUDIO_NoSpeechPeer = 2;\r\nglobal.AUDIO_NoSpeechSelfAndPeer = 3;\r\n\r\n/**\r\n * VideoStart 时的视频接收模式。\r\n */\r\nglobal.VIDEO_Normal = 0;\r\nglobal.VIDEO_OnlyInput = 1;\r\nglobal.VIDEO_OnlyOutput = 2;\r\n\r\n/**\r\n * private\r\n */\r\nglobal.VIDEO_PEER_MODE_Leave  = 0;\r\nglobal.VIDEO_PEER_MODE_Request = 1;\r\nglobal.VIDEO_PEER_MODE_Response = 2;\r\nglobal.VIDEO_PEER_MODE_Join = 3;\r\n\r\nglobal.VIDEO_RESPONSE_TIMEOUT = 30;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],6:[function(require,module,exports){\n(function (global){\n\r\nvar PG_ERR_Normal = 0;\r\nvar PG_ERR_System = 1;\r\nvar PG_ERR_BadParam = 2;\r\nvar PG_ERR_BadClass = 3;\r\nvar PG_ERR_BadMethod = 4;\r\nvar PG_ERR_BadObject = 5;\r\nvar PG_ERR_BadStatus = 6;\r\nvar PG_ERR_BadFile = 7;\r\nvar PG_ERR_BadUser = 8;\r\nvar PG_ERR_BadPass = 9;\r\nvar PG_ERR_NoLogin = 10;\r\nvar PG_ERR_Network = 11;\r\nvar PG_ERR_Timeout = 12;\r\nvar PG_ERR_Reject = 13;\r\nvar PG_ERR_Busy = 14;\r\nvar PG_ERR_Opened = 15;\r\nvar PG_ERR_Closed = 16;\r\nvar PG_ERR_Exist = 17;\r\nvar PG_ERR_NoExist = 18;\r\nvar PG_ERR_NoSpace = 19;\r\nvar PG_ERR_BadType = 20;\r\nvar PG_ERR_CheckErr = 21;\r\nvar PG_ERR_BadServer = 22;\r\nvar PG_ERR_BadDomain = 23;\r\nvar PG_ERR_NoData = 24;\r\nvar PG_ERR_Unknown = 0xff;\r\n\r\nvar pgLibError = {};\r\n\r\nglobal.PG_ERR_Normal = pgLibError.PG_ERR_Normal = PG_ERR_Normal;\r\nglobal.PG_ERR_System = pgLibError.PG_ERR_System = PG_ERR_System;\r\nglobal.PG_ERR_BadParam = pgLibError.PG_ERR_BadParam = PG_ERR_BadParam;\r\nglobal.PG_ERR_BadClass = pgLibError.PG_ERR_BadClass = PG_ERR_BadClass;\r\nglobal.PG_ERR_BadMethod = pgLibError.PG_ERR_BadMethod = PG_ERR_BadMethod;\r\nglobal.PG_ERR_BadObject = pgLibError.PG_ERR_BadObject = PG_ERR_BadObject;\r\nglobal.PG_ERR_BadStatus = pgLibError.PG_ERR_BadStatus = PG_ERR_BadStatus;\r\nglobal.PG_ERR_BadFile = pgLibError.PG_ERR_BadFile = PG_ERR_BadFile;\r\nglobal.PG_ERR_BadUser = pgLibError.PG_ERR_BadUser = PG_ERR_BadUser;\r\nglobal.PG_ERR_BadPass = pgLibError.PG_ERR_BadPass = PG_ERR_BadPass;\r\nglobal.PG_ERR_NoLogin = pgLibError.PG_ERR_NoLogin = PG_ERR_NoLogin;\r\nglobal.PG_ERR_Network = pgLibError.PG_ERR_Network = PG_ERR_Network;\r\nglobal.PG_ERR_Timeout = pgLibError.PG_ERR_Timeout = PG_ERR_Timeout;\r\nglobal.PG_ERR_Reject = pgLibError.PG_ERR_Reject = PG_ERR_Reject;\r\nglobal.PG_ERR_Busy = pgLibError.PG_ERR_Busy = PG_ERR_Busy;\r\nglobal.PG_ERR_Opened = pgLibError.PG_ERR_Opened = PG_ERR_Opened;\r\nglobal.PG_ERR_Closed = pgLibError.PG_ERR_Closed = PG_ERR_Closed;\r\nglobal.PG_ERR_Exist = pgLibError.PG_ERR_Exist = PG_ERR_Exist;\r\nglobal.PG_ERR_NoExist = pgLibError.PG_ERR_NoExist = PG_ERR_NoExist;\r\nglobal.PG_ERR_NoSpace = pgLibError.PG_ERR_NoSpace = PG_ERR_NoSpace;\r\nglobal.PG_ERR_BadType = pgLibError.PG_ERR_BadType = PG_ERR_BadType;\r\nglobal.PG_ERR_CheckErr = pgLibError.PG_ERR_CheckErr = PG_ERR_CheckErr;\r\nglobal.PG_ERR_BadServer = pgLibError.PG_ERR_BadServer = PG_ERR_BadServer;\r\nglobal.PG_ERR_BadDomain = pgLibError.PG_ERR_BadDomain = PG_ERR_BadDomain;\r\nglobal.PG_ERR_NoData = pgLibError.PG_ERR_NoData = PG_ERR_NoData;\r\nglobal.PG_ERR_Unknown = pgLibError.PG_ERR_Unknown = PG_ERR_Unknown;\r\n\r\nglobal.pgLibError=pgLibError;\r\n\r\nvar strErrors = [\r\n    \"PG_ERR_Normal\",\r\n    \"PG_ERR_System\",\r\n    \"PG_ERR_BadParam\",\r\n    \"PG_ERR_BadClass\",\r\n    \"PG_ERR_BadMethod\",\r\n    \"PG_ERR_BadObject\",\r\n    \"PG_ERR_BadStatus\",\r\n    \"PG_ERR_BadFile\",\r\n    \"PG_ERR_BadUser\",\r\n    \"PG_ERR_BadPass\",\r\n    \"PG_ERR_NoLogin\",\r\n    \"PG_ERR_Network\",\r\n    \"PG_ERR_Timeout\",\r\n    \"PG_ERR_Reject\",\r\n    \"PG_ERR_Busy\",\r\n    \"PG_ERR_Opened\",\r\n    \"PG_ERR_Closed\",\r\n    \"PG_ERR_Exist\",\r\n    \"PG_ERR_NoExist\",\r\n    \"PG_ERR_NoSpace\",\r\n    \"PG_ERR_BadType\",\r\n    \"PG_ERR_CheckErr\",\r\n    \"PG_ERR_BadServer\",\r\n    \"PG_ERR_BadDomain\",\r\n    \"PG_ERR_NoData\"\r\n];\r\n\r\nfunction pgLibErr2Str(iErr){\r\n    if(iErr<0 || iErr >= strErrors.length){\r\n        return \"PG_ERR_Unknown\";\r\n    }\r\n    return strErrors[iErr];\r\n}\r\n\r\nglobal.pgLibError=pgLibError;\r\nglobal.pgLibErr2Str=pgLibErr2Str;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],7:[function(require,module,exports){\n(function (global){\n\r\nfunction _ParseInt(sVal, idefVal) {\r\n    try {\r\n        if (typeof sVal == \"string\" && sVal != \"\") {\r\n            return parseInt(sVal);\r\n        }\r\n        return idefVal;\r\n    } catch (e) {\r\n        return idefVal;\r\n    }\r\n}\r\nglobal._ParseInt =_ParseInt;\r\n\r\nfunction _AddrToReadable(sAddr) {\r\n    try {\r\n        var sAddrSect = sAddr.split(\":\", 6);\r\n        if (sAddrSect.length < 6) {\r\n            return sAddr;\r\n        }\r\n\r\n        var sReadable = \"\";\r\n        var iIP0 = 0;\r\n        var iIP1 = 0;\r\n        var iIP2 = 0;\r\n        var iIP3 = 0;\r\n        if (sAddrSect[0] == \"0\" &&\r\n            sAddrSect[1] == \"0\" &&\r\n            sAddrSect[2] == \"0\" &&\r\n            sAddrSect[3] != \"0\" &&\r\n            sAddrSect[3] != \"1\") {\r\n            var iIP = parseInt(sAddrSect[3], 16);\r\n            iIP0 = (iIP >> 24) & 0xff;\r\n            iIP1 = (iIP >> 16) & 0xff;\r\n            iIP2 = (iIP >> 8) & 0xff;\r\n            iIP3 = (iIP & 0xff);\r\n            sReadable = (iIP0 + \".\" + iIP1 + \".\" + iIP2 + \".\" + iIP3 + \":\" + sAddrSect[4]);\r\n        } else {\r\n            iIP0 = parseInt(sAddrSect[0], 16);\r\n            iIP1 = parseInt(sAddrSect[1], 16);\r\n            iIP2 = parseInt(sAddrSect[2], 16);\r\n            iIP3 = parseInt(sAddrSect[3], 16);\r\n\r\n            var iWord0 = (iIP0 >> 16) & 0xffff;\r\n            var iWord1 = (iIP0 & 0xffff);\r\n\r\n            var iWord2 = (iIP1 >> 16) & 0xffff;\r\n            var iWord3 = (iIP1 & 0xffff);\r\n\r\n            var iWord4 = (iIP2 >> 16) & 0xffff;\r\n            var iWord5 = (iIP2 & 0xffff);\r\n\r\n            var iWord6 = (iIP3 >> 16) & 0xffff;\r\n            var iWord7 = (iIP3 & 0xffff);\r\n\r\n            sReadable = (\"[\" + iWord0.toString(16) + \":\" + iWord1.toString(16) + \":\" + iWord2.toString(16) +\r\n                \":\" + iWord3.toString(16) + \":\" + iWord4.toString(16) + \":\" + iWord5.toString(16) +\r\n                \":\" + iWord6.toString(16) + \":\" + iWord7.toString(16) + \"]:\" + sAddrSect[4]);\r\n        }\r\n\r\n        return sReadable;\r\n    } catch (e) {\r\n        return sAddr;\r\n    }\r\n}\r\nglobal._AddrToReadable = _AddrToReadable;\r\n\r\nvar pgLibNode = {};\r\npgLibNode._ParseInt =_ParseInt;\r\npgLibNode._AddrToReadable = _AddrToReadable;\r\n\r\n\r\nglobal.PG_CLASS_Peer = pgLibNode.PG_CLASS_Peer = \"PG_CLASS_Peer\";\r\nglobal.PG_CLASS_Group = pgLibNode.PG_CLASS_Group = \"PG_CLASS_Group\";\r\nglobal.PG_CLASS_Data = pgLibNode.PG_CLASS_Data = \"PG_CLASS_Data\";\r\nglobal.PG_CLASS_File = pgLibNode.PG_CLASS_File = \"PG_CLASS_File\";\r\nglobal.PG_CLASS_Audio = pgLibNode.PG_CLASS_Audio = \"PG_CLASS_Audio\";\r\nglobal.PG_CLASS_Video = pgLibNode.PG_CLASS_Video = \"PG_CLASS_Video\";\r\n\r\nglobal.PG_ADD_COMMON_Sync = pgLibNode.PG_ADD_COMMON_Sync = 0x10000;\r\nglobal.PG_ADD_COMMON_Error = pgLibNode.PG_ADD_COMMON_Error = 0x20000;\r\nglobal.PG_ADD_COMMON_Encrypt = pgLibNode.PG_ADD_COMMON_Encrypt = 0x40000;\r\nglobal.PG_ADD_COMMON_Compress = pgLibNode.PG_ADD_COMMON_Compress = 0x80000;\r\n\r\nglobal.PG_ADD_PEER_Self = pgLibNode.PG_ADD_PEER_Self = 0x1;\r\nglobal.PG_ADD_PEER_Server = pgLibNode.PG_ADD_PEER_Server = 0x2;\r\nglobal.PG_ADD_PEER_Static = pgLibNode.PG_ADD_PEER_Static = 0x4;\r\nglobal.PG_ADD_PEER_Digest = pgLibNode.PG_ADD_PEER_Digest = 0x8;\r\nglobal.PG_ADD_PEER_Disable = pgLibNode.PG_ADD_PEER_Disable = 0x10;\r\n\r\nglobal.PG_ADD_GROUP_Update = pgLibNode.PG_ADD_GROUP_Update = 0x1;\r\nglobal.PG_ADD_GROUP_Master = pgLibNode.PG_ADD_GROUP_Master =0x2;\r\nglobal.PG_ADD_GROUP_Refered = pgLibNode.PG_ADD_GROUP_Refered = 0x4;\r\nglobal.PG_ADD_GROUP_NearPeer = pgLibNode.PG_ADD_GROUP_NearPeer = 0x8;\r\nglobal.PG_ADD_GROUP_Modify = pgLibNode.PG_ADD_GROUP_Modify = 0x10;\r\nglobal.PG_ADD_GROUP_Index = pgLibNode.PG_ADD_GROUP_Index = 0x20;\r\nglobal.PG_ADD_GROUP_Offline = pgLibNode.PG_ADD_GROUP_Offline = 0x40;\r\nglobal.PG_ADD_GROUP_HearOnly = pgLibNode.PG_ADD_GROUP_HearOnly = 0x80;\r\n\r\nglobal.PG_ADD_FILE_TcpSock = pgLibNode.PG_ADD_FILE_TcpSock = 0x1;\r\nglobal.PG_ADD_FILE_Flush = pgLibNode.PG_ADD_FILE_Flush = 0x2;\r\nglobal.PG_ADD_FILE_PeerStop = pgLibNode.PG_ADD_FILE_PeerStop = 0x4;\r\n\r\nglobal.PG_ADD_AUDIO_Conference = pgLibNode.PG_ADD_AUDIO_Conference = 0x1;\r\nglobal.PG_ADD_AUDIO_ShowVolume = pgLibNode.PG_ADD_AUDIO_ShowVolume = 0x2;\r\nglobal.PG_ADD_AUDIO_OnlyInput = pgLibNode.PG_ADD_AUDIO_OnlyInput =0x4;\r\nglobal.PG_ADD_AUDIO_OnlyOutput = pgLibNode.PG_ADD_AUDIO_OnlyOutput = 0x8;\r\nglobal.PG_ADD_AUDIO_SendReliable = pgLibNode.PG_ADD_AUDIO_SendReliable = 0x10;\r\nglobal.PG_ADD_AUDIO_NoSpeechSelf = pgLibNode.PG_ADD_AUDIO_NoSpeechSelf = 0x20;\r\nglobal.PG_ADD_AUDIO_NoSpeechPeer = pgLibNode.PG_ADD_AUDIO_NoSpeechPeer = 0x40;\r\nglobal.PG_ADD_AUDIO_MuteInput = pgLibNode.PG_ADD_AUDIO_MuteInput = 0x80;\r\nglobal.PG_ADD_AUDIO_MuteOutput = pgLibNode.PG_ADD_AUDIO_MuteOutput = 0x100;\r\n\r\nglobal.PG_ADD_VIDEO_Conference = pgLibNode.PG_ADD_VIDEO_Conference = 0x1;\r\nglobal.PG_ADD_VIDEO_Preview = pgLibNode.PG_ADD_VIDEO_Preview = 0x2;\r\nglobal.PG_ADD_VIDEO_OnlyInput = pgLibNode.PG_ADD_VIDEO_OnlyInput = 0x4;\r\nglobal.PG_ADD_VIDEO_OnlyOutput = pgLibNode.PG_ADD_VIDEO_OnlyOutput = 0x8;\r\nglobal.PG_ADD_VIDEO_FrameStat = pgLibNode.PG_ADD_VIDEO_FrameStat = 0x10;\r\nglobal.PG_ADD_VIDEO_DrawThread = pgLibNode.PG_ADD_VIDEO_DrawThread = 0x20 ;\r\nglobal.PG_ADD_VIDEO_OutputExternal = pgLibNode.PG_ADD_VIDEO_OutputExternal = 0x40;\r\nglobal.PG_ADD_VIDEO_OutputExtCmp = pgLibNode.PG_ADD_VIDEO_OutputExtCmp = 0x80;\r\nglobal.PG_ADD_VIDEO_FilterDecode = pgLibNode.PG_ADD_VIDEO_FilterDecode = 0x100;\r\n\r\nglobal.PG_METH_COMMON_Sync = pgLibNode.PG_METH_COMMON_Sync = 0;\r\nglobal.PG_METH_COMMON_Error = pgLibNode.PG_METH_COMMON_Error = 1;\r\nglobal.PG_METH_COMMON_SetOption = pgLibNode.PG_METH_COMMON_SetOption = 2;\r\nglobal.PG_METH_COMMON_GetOption = pgLibNode.PG_METH_COMMON_GetOption = 3;\r\n\r\nglobal.PG_METH_PEER_Login = pgLibNode.PG_METH_PEER_Login = 32;\r\nglobal.PG_METH_PEER_Logout = pgLibNode.PG_METH_PEER_Logout=33;\r\nglobal.PG_METH_PEER_Status = pgLibNode.PG_METH_PEER_Status=34;\r\nglobal.PG_METH_PEER_Call = pgLibNode.PG_METH_PEER_Call=35;\r\nglobal.PG_METH_PEER_Message = pgLibNode.PG_METH_PEER_Message=36;\r\nglobal.PG_METH_PEER_SetAddr = pgLibNode.PG_METH_PEER_SetAddr=37;\r\nglobal.PG_METH_PEER_GetAddr = pgLibNode.PG_METH_PEER_GetAddr=38;\r\nglobal.PG_METH_PEER_DigGen = pgLibNode.PG_METH_PEER_DigGen=39;\r\nglobal.PG_METH_PEER_DigVerify = pgLibNode.PG_METH_PEER_DigVerify=40;\r\nglobal.PG_METH_PEER_CheckInfo = pgLibNode.PG_METH_PEER_CheckInfo=41;\r\nglobal.PG_METH_PEER_LanScan = pgLibNode.PG_METH_PEER_LanScan = 42;\r\nglobal.PG_METH_PEER_AgentLogin = pgLibNode.PG_METH_PEER_AgentLogin = 43;\r\nglobal.PG_METH_PEER_AgentLogout = pgLibNode.PG_METH_PEER_AgentLogout = 44;\r\nglobal.PG_METH_PEER_AgentMessage = pgLibNode.PG_METH_PEER_AgentMessage = 45;\r\nglobal.PG_METH_PEER_ReloginReply = pgLibNode.PG_METH_PEER_ReloginReply = 46;\r\nglobal.PG_METH_PEER_KickOut = pgLibNode.PG_METH_PEER_KickOut = 47;\r\nglobal.PG_METH_PEER_AccessCtrl = pgLibNode.PG_METH_PEER_AccessCtrl = 48;\r\nglobal.PG_METH_PEER_PushOption = pgLibNode.PG_METH_PEER_PushOption = 49;\r\n\r\nglobal.PG_METH_GROUP_Modify = pgLibNode.PG_METH_GROUP_Modify=32;\r\nglobal.PG_METH_GROUP_Update = pgLibNode.PG_METH_GROUP_Update=33;\r\nglobal.PG_METH_GROUP_Master = pgLibNode.PG_METH_GROUP_Master=34;\r\n\r\nglobal.PG_METH_DATA_Message = pgLibNode.PG_METH_DATA_Message = 32;\r\n\r\nglobal.PG_METH_FILE_Put = pgLibNode.PG_METH_FILE_Put = 32;\r\nglobal.PG_METH_FILE_Get = pgLibNode.PG_METH_FILE_Get = 33;\r\nglobal.PG_METH_FILE_Status = pgLibNode.PG_METH_FILE_Status = 34;\r\nglobal.PG_METH_FILE_Cancel = pgLibNode.PG_METH_FILE_Cancel = 35;\r\n\r\nglobal.PG_METH_AUDIO_Open = pgLibNode.PG_METH_AUDIO_Open = 32;\r\nglobal.PG_METH_AUDIO_Close = pgLibNode.PG_METH_AUDIO_Close = 33;\r\nglobal.PG_METH_AUDIO_CtrlVolume = pgLibNode.PG_METH_AUDIO_CtrlVolume = 34;\r\nglobal.PG_METH_AUDIO_ShowVolume = pgLibNode.PG_METH_AUDIO_ShowVolume = 35;\r\nglobal.PG_METH_AUDIO_Speech = pgLibNode.PG_METH_AUDIO_Speech = 36;\r\nglobal.PG_METH_AUDIO_Record = pgLibNode.PG_METH_AUDIO_Record = 37;\r\n\r\nglobal.PG_METH_VIDEO_Open = pgLibNode.PG_METH_VIDEO_Open = 32;\r\nglobal.PG_METH_VIDEO_Close = pgLibNode.PG_METH_VIDEO_Close =33;\r\nglobal.PG_METH_VIDEO_Move = pgLibNode.PG_METH_VIDEO_Move = 34;\r\nglobal.PG_METH_VIDEO_Join = pgLibNode.PG_METH_VIDEO_Join = 35;\r\nglobal.PG_METH_VIDEO_Leave = pgLibNode.PG_METH_VIDEO_Leave = 36;\r\nglobal.PG_METH_VIDEO_Camera = pgLibNode.PG_METH_VIDEO_Camera =37;\r\nglobal.PG_METH_VIDEO_Record = pgLibNode.PG_METH_VIDEO_Record =38;\r\nglobal.PG_METH_VIDEO_Transfer = pgLibNode.PG_METH_VIDEO_Transfer = 39;\r\nglobal.PG_METH_VIDEO_FrameStat = pgLibNode.PG_METH_VIDEO_FrameStat = 40;\r\n\r\nglobal.pgLibNode = pgLibNode;\r\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[4]);\n"]}